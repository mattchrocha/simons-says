{"version":3,"sources":["components/svg/TapCodeLogo.svg","components/pushbutton/scripts.js","components/react-ink/util/hasTouch.js","components/react-ink/style.js","components/react-ink/util/easing.js","components/react-ink/util/equations.js","components/react-ink/util/store.js","components/react-ink/util/merge.js","components/react-ink/index.js","components/react-ink/util/pixelRatio.js","components/pushbutton/PushButton.js","components/game/GameService.js","components/game/Game.js","components/game/NewGameForm.js","components/game/NewGame.js","components/navbar/Navbar.js","disablescroll.js","components/Button/Button.js","components/pushbutton/PushButtonLoader.js","components/navfix/Navfix.js","components/steps/Home.js","components/steps/SetRoom.js","components/steps/SetPlayers.js","components/steps/SetButtons.js","components/steps/OnYourMarks.js","components/steps/GameOver.js","components/game2/GameService.js","components/game2/Game.js","components/main/Main.js","App.js","serviceWorker.js","index.js","components/svg/NavProfile.svg","components/svg/SetRoom.svg","components/svg/SetPlayers.svg","components/svg/add.svg","components/svg/remove.svg","components/svg/SetButtons.svg"],"names":["module","exports","__webpack_require__","p","generateGradient","hexValues","a","i","x","Math","round","random","populate","bool","window","DocumentTouch","document","HAS_TOUCH","STYLE","borderRadius","height","left","position","top","width","easeOutQuint","t","b","c","d","SQRT_2","sqrt","cos","max","min","getPress","blot","duration","Date","now","mouseDown","getRelease","mouseUp","getRadius","radius","down","up","undulation","getBlotOpacity","opacity","getBlotOuterOpacity","killStale","_ref","merge","copy","arguments","length","subject","key","TAU","PI","defaultProps","background","color","className","recenter","hasTouch","Ink","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","state","density","store","publicize","_frame","_data","_playing","Store","each","callback","scope","l","call","play","update","stop","cancelAnimationFrame","getTotalOpacity","answer","filter","requestAnimationFrame","add","push","release","time","tick","bind","assertThisInitialized","touchEvents","onTouchStart","_onPress","onTouchEnd","_onRelease","onTouchCancel","onMouseDown","onMouseUp","onMouseLeave","_this$state","ctx","save","scale","clearRect","fillStyle","globalAlpha","fillRect","makeBlot","restore","_this$state2","y","beginPath","size","getBlotShiftX","getBlotShiftY","arc","getBlotScale","closePath","fill","timeStamp","clientX","clientY","_this2","el","canvas","getDOMNode","context","_el$getBoundingClient","getBoundingClientRect","bottom","right","getContext","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","getMaxRadius","setState","_this$state3","style","ref","setCanvas","onDragOver","React","createElement","event","button","ctrlKey","changedTouches","_changedTouches$i","pushBlot","PureComponent","PushButton","console","log","enterSocketRoom","socket","emit","room","nextPlayer","player","message","userMessage","onSuccess","setTimeout","playerEliminated","_ref2","onFailure","playerWins","_ref3","onGreen","onWrong","bigMessage","onRound","memorize","repeat","onSuccessFast","newGame","screenbutton","getElementsByClassName","setAttribute","concat","bgcolor","submitTap","id","mainGameButton","isConnected","io","on","feedback","type","content","startGame","prevProps","react_default","backgroundColor","onClick","react_ink_Ink","react_transition_group","timeout","enter","exit","classNames","Component","GameService","name","creator","service","post","then","response","data","axios","create","baseURL","process","withCredentials","NewGameForm","handleFormSubmit","preventDefault","createGame","handleChange","value","target","onSubmit","onChange","e","error","Navbar","Link","to","src","logo","alt","profile","returnValue","disableScroll","addEventListener","onwheel","onmousewheel","ontouchmove","OutlineButton","_Component","inherits","createClass","isDisabled","disabled","text","FilledButton","_Component2","objectSpread","PushButtonLoader","handleSubmit","connected","display","zIndex","paddingBottom","marginBottom","match","params","Button_OutlineButton","PushButton_PushButton","Navfix","flex","Home","nextPage","SetRoom","roomName","getRoom","onkeydown","keyCode","_this3","setRoom","placeholder","SetPlayers","addPlayer","newPlayers","getPlayers","removePlayer","playerName","splice","indexOf","players","map","remove","setPlayers","SetButtons","buttonsNumber","setButtons","marginTop","OnYourMarks","join","Button_FilledButton","Game","game","catch","requestButtons","startGame1","startGame2","gameEnds","gameOn","buttons","newRound","findNextPlayer","playerIndex","currentPlayer","remainingPlayers","toConsumableArray","nextIndex","lastPlayer","toString","includes","found","thisPlayer","sequence","floor","playSequence","forEach","index","isListening","roundSequence","checkSequence","gameOver","componentDidUpdate","getConnectedButtons","displayGame","mainButton","Main","page","gameRoom","element","connectedButtons","navfix_Navfix","Home_Home","SetRoom_SetRoom","SetPlayers_SetPlayers","SetButtons_SetButtons","OnYourMarks_OnYourMarks","GameOver_OnYourMarks","game2_Game","App","Navbar_Navbar","Switch","Route","exact","path","render","Main_Main","component","Boolean","location","hostname","ReactDOM","BrowserRouter","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4IAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wPCiBzBC,UAjBU,WAEvB,IAAIC,EAAY,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAWzE,OATA,SAAkBC,GAChB,IAAM,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IAAM,CAC5B,IAAIC,EAAIC,KAAKC,MAAuB,GAAhBD,KAAKE,UAEzBL,GADQD,EAAUG,GAGpB,OAAOF,EAGFM,CAAS,uBCbdC,GAAO,EAEW,qBAAXC,SACTD,EACE,iBAAkBC,QACjBA,OAAOC,eAAiBC,oBAAoBF,OAAOC,eAGjD,IAAME,EAAYJ,ECRZK,EAAQ,CACnBC,aAAc,UACdC,OAAQ,OACRC,KAAM,EACNC,SAAU,WACVC,IAAK,EACLC,MAAO,QCCF,SAASC,EAAaC,EAAGC,EAAGC,EAAGC,GACpC,OAAOD,IAAMF,EAAIA,EAAIG,EAAI,GAAKH,EAAIA,EAAIA,EAAIA,EAAI,GAAKC,ECNrD,IAAMG,EAASrB,KAAKsB,KAAK,GACjBC,EAAkBvB,KAAlBuB,IAAKC,EAAaxB,KAAbwB,IAAKC,EAAQzB,KAARyB,IAElB,SAASC,EAASC,GAChB,OAAOF,EAAIE,EAAKC,SAAUC,KAAKC,MAAQH,EAAKI,WAG9C,SAASC,EAAWL,GAClB,OAAOA,EAAKM,QAAU,EAAIJ,KAAKC,MAAQH,EAAKM,QAAU,EAGxD,SAASC,EAAUP,GAAM,IACjBC,EAAqBD,EAArBC,SAAUO,EAAWR,EAAXQ,OAEZC,EAA2D,IAApDpB,EAAaU,EAASC,GAAO,EAAGQ,EAAQP,GAC/CS,EAA2D,IAAtDrB,EAAagB,EAAWL,GAAO,EAAGQ,EAAQP,GAC/CU,EAAsB,IAATH,EAAgBZ,EAAIM,KAAKC,MAAQF,GAElD,OAAOJ,EAAI,EAAGY,EAAOC,EAAKC,GAOrB,SAASC,EAAeZ,EAAMa,GACnC,OAAOxB,EAAagB,EAAWL,GAAOa,GAAUA,EAASb,EAAKC,UAGzD,SAASa,EAAoBd,EAAMa,GACxC,OAAOf,EACLc,EAAeZ,EAAMa,GACrBxB,EAAaU,EAASC,GAAO,EAAG,GAAqB,EAAhBA,EAAKC,WC1B9C,IAAIc,EAAY,SAAAC,GAAA,IAAGV,EAAHU,EAAGV,QAASL,EAAZe,EAAYf,SAAZ,OACbK,GAAWJ,KAAKC,MAAQG,EAAUL,GCT9B,SAASgB,IAGd,IAFA,IAAIC,EAAO,GAEF/C,EAAI,EAAGA,EAAIgD,UAAUC,OAAQjD,IAAK,CACzC,IAAIkD,EAAUF,UAAUhD,GAExB,GAAIkD,EACF,IAAK,IAAIC,KAAOD,EACdH,EAAKI,GAAOD,EAAQC,GAK1B,OAAOJ,ECOT,IAAMK,EAAgB,EAAVlD,KAAKmD,GAGXC,EAAe,CACnBC,YAAY,EACZC,MAAO,UACPC,UAAW,MACX3B,SAAU,IACVY,QAAS,IACTL,OAAQ,IACRqB,UAAU,EACVC,SAAUjD,GAGSkD,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,MAAAH,KAASjB,aAEJqB,MAAQ,CACXC,QAAS,GACTzD,OAAQ,EACR0D,MF9BC,SAAeC,GACpB,IAEIC,EAFAC,EAAQ,GACRC,GAAW,EAGXC,EAAQ,CACVC,KADU,SACLC,EAAUC,GACb,IAAK,IAAI/E,EAAI,EAAGgF,EAAIN,EAAMzB,OAAQjD,EAAIgF,EAAGhF,IACvC8E,EAASG,KAAKF,EAAOL,EAAM1E,KAI/BkF,KAPU,WAQHP,IACHA,GAAW,EACXC,EAAMO,WAIVC,KAdU,WAeRT,GAAW,EACXU,qBAAqBZ,IAGvBa,gBAnBU,SAmBM5C,GAGd,IAFA,IAAI6C,EAAS,EAEJvF,EAAI,EAAGgF,EAAIN,EAAMzB,OAAQjD,EAAIgF,EAAGhF,IACvCuF,GAAU5C,EAAoB+B,EAAM1E,GAAI0C,GAG1C,OAAO6C,GAGTJ,OA7BU,YA8BRT,EAAQA,EAAMc,OAAO5C,IAEXK,OACRwB,EAASgB,sBAAsBb,EAAMO,QAErCP,EAAMQ,OAGRZ,KAGFkB,IAzCU,SAyCN7B,GACFa,EAAMiB,KAAK9B,GACXe,EAAMM,QAGRU,QA9CU,SA8CFC,GACN,IAAK,IAAI7F,EAAI0E,EAAMzB,OAAS,EAAGjD,GAAK,EAAGA,IACrC,IAAK0E,EAAM1E,GAAGmC,QACZ,OAAQuC,EAAM1E,GAAGmC,QAAU0D,IAMnC,OAAOjB,EE9BIA,CAAMd,EAAKgC,KAAKC,KAAVhC,OAAAiC,EAAA,EAAAjC,QAAAiC,EAAA,EAAAjC,CAAAD,MACb7C,MAAO,GAGT6C,EAAKmC,YAAcnC,EAAKmC,cAVPnC,6EAcjB,OAAIG,KAAKJ,MAAMF,SACN,CACLuC,aAAcjC,KAAKkC,SAASJ,KAAK9B,MACjCmC,WAAYnC,KAAKoC,WAAWN,KAAK9B,MACjCqC,cAAerC,KAAKoC,WAAWN,KAAK9B,OAG/B,CACLsC,YAAatC,KAAKkC,SAASJ,KAAK9B,MAChCuC,UAAWvC,KAAKoC,WAAWN,KAAK9B,MAChCwC,aAAcxC,KAAKoC,WAAWN,KAAK9B,sCAKlC,IAAAyC,EACwCzC,KAAKI,MAA5CsC,EADDD,EACCC,IAAKrC,EADNoC,EACMpC,QAASzD,EADf6F,EACe7F,OAAQI,EADvByF,EACuBzF,MAAOsD,EAD9BmC,EAC8BnC,MAEnCoC,EAAIC,OAEJD,EAAIE,MAAMvC,EAASA,GAEnBqC,EAAIG,UAAU,EAAG,EAAG7F,EAAOJ,GAE3B8F,EAAII,UAAY9C,KAAKJ,MAAML,MAEvBS,KAAKJ,MAAMN,aACboD,EAAIK,YAAczC,EAAMe,gBAAgBrB,KAAKJ,MAAMnB,SACnDiE,EAAIM,SAAS,EAAG,EAAGhG,EAAOJ,IAG5B0D,EAAMM,KAAKZ,KAAKiD,SAAUjD,MAE1B0C,EAAIQ,2CAGGtF,GAAM,IAAAuF,EACgBnD,KAAKI,MAA5BsC,EADOS,EACPT,IAAK9F,EADEuG,EACFvG,OAAQI,EADNmG,EACMnG,MACbhB,EAAiB4B,EAAjB5B,EAAGoH,EAAcxF,EAAdwF,EAAGhF,EAAWR,EAAXQ,OAKZ,GAHAsE,EAAIK,YAAcvE,EAAeZ,EAAMoC,KAAKJ,MAAMnB,SAClDiE,EAAIW,YAEArD,KAAKJ,MAAMH,SAAU,CACvB,IAAI6D,EAAOrH,KAAKwB,IAAIb,EAAQI,GAE5BhB,GHzDC,SAAuB4B,EAAM0F,EAAMtG,GACxC,OAAOU,EAAI,EAAGS,EAAUP,GAAQ0F,EAAO,EAAIhG,IAAWN,EAAQ,EAAIY,EAAK5B,GGwD9DuH,CAAc3F,EAAM0F,EAAMtG,GAC/BoG,GHtDC,SAAuBxF,EAAM0F,EAAM1G,GACxC,OAAOc,EAAI,EAAGS,EAAUP,GAAQ0F,EAAO,EAAIhG,IAAWV,EAAS,EAAIgB,EAAKwF,GGqD/DI,CAAc5F,EAAM0F,EAAM1G,GAGjC8F,EAAIe,IAAIzH,EAAGoH,EAAGhF,EHrDX,SAAsBR,GAC3B,OAAOO,EAAUP,GAAQA,EAAKQ,OGoDLsF,CAAa9F,GAAO,EAAGuB,GAE9CuD,EAAIiB,YACJjB,EAAIkB,sDAIJ5D,KAAKI,MAAME,MAAMa,wCAGV0C,EAAWC,EAASC,GAAS,IAAAC,EAAAhE,KAChCiE,EAAKjE,KAAKkE,OAGVD,EAAGE,YAAc,oBAAsBF,EAAGE,aAC5CF,EAAKA,EAAGE,cAL0B,IC1GdC,ED0GcC,EAQDJ,EAAGK,wBAAhCvH,EAR8BsH,EAQ9BtH,IAAKwH,EARyBF,EAQzBE,OAAQ1H,EARiBwH,EAQjBxH,KAAM2H,EARWH,EAQXG,MAGrB9B,EAAM1C,KAAKI,MAAMsC,KAAOuB,EAAGQ,WAAW,MACtCpE,GCtHkB+D,EDsHG1B,GCrHJpG,OAAOoI,kBAAoB,IAEhDN,EAAQO,8BACRP,EAAQQ,2BACRR,EAAQS,0BACRT,EAAQU,yBACRV,EAAQW,wBACR,ID+GInI,EAAS2H,EAASxH,EAClBC,EAAQwH,EAAQ3H,EAChBuB,EHrGD,SAAsBxB,EAAQI,EAAOoB,GAC1C,OAAOV,EAAyB,GAArBD,EAAIb,EAAQI,GAAcoB,GGoGtB4G,CAAapI,EAAQI,EAAOgD,KAAKJ,MAAMxB,QAEpD4B,KAAKiF,SAAS,CAAEvC,MAAKrC,UAASzD,SAAQI,SAAS,WAC7CgH,EAAK5D,MAAME,MAAMmB,IAAI,CACnB5D,SAAUmG,EAAKpE,MAAM/B,SACrBG,UAAW6F,EACX3F,QAAS,EACTE,OAAQA,EACRpC,EAAG8H,EAAUjH,EACbuG,EAAGW,EAAUhH,wCAKTkH,GACRjE,KAAKkE,OAASD,mCAGP,IAAAiB,EACqClF,KAAKI,MAA3CZ,EADC0F,EACD1F,UAAWa,EADV6E,EACU7E,QAASzD,EADnBsI,EACmBtI,OAAQI,EAD3BkI,EAC2BlI,MAC5BmI,EAAUnF,KAAKJ,MAAfuF,MAEFvF,EAAQf,EACV,CACEW,UAAWA,EACX4F,IAAKpF,KAAKqF,UAAUvD,KAAK9B,MACzBpD,OAAQA,EAASyD,EACjBrD,MAAOA,EAAQqD,EACfiF,WAAYtF,KAAKoC,WACjB+C,MAAOtG,EAAMnC,EAAOyI,IAEtBnF,KAAKgC,aAGP,OAAOuD,IAAMC,cAAc,SAAU5F,oCAG9B6F,GAAO,IACRC,EAAsDD,EAAtDC,OAAQC,EAA8CF,EAA9CE,QAAS7B,EAAqC2B,EAArC3B,QAASC,EAA4B0B,EAA5B1B,QAAS6B,EAAmBH,EAAnBG,eACrC/B,EAAY/F,KAAKC,MAErB,GAAI6H,EACF,IAAK,IAAI7J,EAAI,EAAGA,EAAI6J,EAAe5G,OAAQjD,IAAK,KAAA8J,EACnBD,EAAe7J,GAApC+H,EADwC+B,EACxC/B,QAASC,EAD+B8B,EAC/B9B,QACf/D,KAAK8F,SAASjC,EAAWC,EAASC,QAnJvB,IAqJJ2B,GAA0BC,GACnC3F,KAAK8F,SAASjC,EAAWC,EAASC,wCAKpC/D,KAAKI,MAAME,MAAMqB,QAAQ7D,KAAKC,cA9IDwH,IAAMQ,eAkJvCpG,EAAIN,aAAeA,ME7KE2G,cACnB,SAAAA,EAAYpG,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgG,GACjBC,QAAQC,IAAI,UACZD,QAAQC,IAAItG,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkG,GAAAhF,KAAAhB,KAAMJ,KAaRuG,gBAAkB,WAChBtG,EAAKuG,OAAOC,KAAK,OAAQxG,EAAKO,MAAMkG,OAjBnBzG,EAuDnB0G,WAAa,SAAA3H,GAAuB,IAArB4H,EAAqB5H,EAArB4H,OAAQC,EAAa7H,EAAb6H,QACrB5G,EAAKoF,SAAS,CAACyB,YAAa,CAACF,SAAQC,aACrC5G,EAAK8G,YACLC,WAAW,WACT/G,EAAKoF,SAAS,CAACyB,YAAa,QAC3B,MA5Dc7G,EA+DnBgH,iBAAmB,SAAAC,GAAuB,IAArBN,EAAqBM,EAArBN,OAAQC,EAAaK,EAAbL,QAC3B5G,EAAKoF,SAAS,CAACyB,YAAa,CAACF,SAAQC,aACrC5G,EAAKkH,YACLH,WAAW,WACT/G,EAAKoF,SAAS,CAACyB,YAAa,QAC3B,MApEc7G,EAuEnBmH,WAAa,SAAAC,GAAuB,IAArBT,EAAqBS,EAArBT,OAAQC,EAAaQ,EAAbR,QACrB5G,EAAKoF,SAAS,CAACyB,YAAa,CAACF,SAAQC,aACrC5G,EAAKqH,UACLN,WAAW,WACT/G,EAAKqH,WACJ,KACHN,WAAW,WACT/G,EAAKoF,SAAS,CAACyB,YAAa,QAC3B,MA/Ec7G,EAkFnBsH,QAAU,WACRtH,EAAKoF,SAAS,CAAEmC,WAAY,UAC5BvH,EAAKkH,YACLH,WAAW,WACT/G,EAAKoF,SAAS,CAAEmC,WAAY,MAC3B,MAvFcvH,EA0FnBwH,QAAU,WACRxH,EAAKoF,SAAS,CAAEmC,WAAY,mBAC5BvH,EAAKqH,UACLN,WAAW,WACT/G,EAAKoF,SAAS,CAAEmC,WAAY,MAC3B,MA/FcvH,EAkGnByH,SAAW,WACTzH,EAAKoF,SAAS,CAAEmC,WAAY,sBAC5BvH,EAAK8G,YACLC,WAAW,WACT/G,EAAKoF,SAAS,CAAEmC,WAAY,MAC3B,MAvGcvH,EA0GnB0H,OAAS,WACP1H,EAAKoF,SAAS,CAAEmC,WAAY,oBAC5BvH,EAAK2H,gBACLZ,WAAW,WACT/G,EAAKoF,SAAS,CAAEmC,WAAY,MAC3B,MA/GcvH,EAmHnB4H,QAAU,WACR,IAAIC,EAAelL,SAASmL,uBAAuB,gBAAgB,GACnED,EAAaE,aAAa,QAAS,yCACnC/H,EAAKoF,SAAS,CAAEmC,WAAY,UAC5BR,WAAW,WACTc,EAAaE,aACX,QADF,kEAAAC,OAGIhI,EAAKO,MAAM0H,UAGflB,WAAW,WACTc,EAAaE,aACX,QACA,yCAEF/H,EAAKoF,SAAS,CAAEmC,WAAY,WAC5BR,WAAW,WACTc,EAAaE,aACX,QADF,kEAAAC,OAGIhI,EAAKO,MAAM0H,UAGflB,WAAW,WACTc,EAAaE,aACX,QACA,yCAEF/H,EAAKoF,SAAS,CAAEmC,WAAY,QAC5BR,WAAW,WACTc,EAAaE,aACX,QADF,kEAAAC,OAGIhI,EAAKO,MAAM0H,UAGfjI,EAAKoF,SAAS,CAAEmC,WAAY,MAC3B,MACF,MACF,MACF,MACF,MA7JcvH,EAgKnBkI,UAAY,WAEVlI,EAAKuG,OAAOC,KAAK,WAAYxG,EAAKO,MAAM4H,KAlKvBnI,EAqKnBkH,UAAY,WACV,IAAIW,EAAelL,SAASmL,uBAAuB,gBAAgB,GACnED,EAAaE,aAAa,QAAS,qCACnChB,WAAW,WACTc,EAAaE,aACX,QADF,kEAAAC,OAGIhI,EAAKO,MAAM0H,WAGd,MA/KcjI,EAkLnB8G,UAAY,WACV,IAAIe,EAAelL,SAASmL,uBAAuB,gBAAgB,GACnED,EAAaE,aACX,QADF,kCAAAC,OAEoChI,EAAKO,MAAM0H,UAE/ClB,WAAW,WACTc,EAAaE,aACX,QADF,6CAAAC,OAE+ChI,EAAKO,MAAM0H,WAEzD,MA7LcjI,EAgMnB2H,cAAgB,WACd,IAAIE,EAAelL,SAASmL,uBAAuB,gBAAgB,GACnED,EAAaE,aACX,QADF,kCAAAC,OAEoChI,EAAKO,MAAM0H,UAE/ClB,WAAW,WACTc,EAAaE,aACX,QADF,+CAAAC,OAEiDhI,EAAKO,MAAM0H,WAE3D,MA3McjI,EA8MnBqH,QAAU,WACR,IAAIQ,EAAelL,SAASmL,uBAAuB,gBAAgB,GACnED,EAAaE,aAAa,QAAS,yCACnChB,WAAW,WACTc,EAAaE,aACX,QADF,kEAAAC,OAGIhI,EAAKO,MAAM0H,WAGd,MApNHjI,EAAKO,MAAQ,CACXkG,KAAM1G,EAAM0G,KACZ0B,GAAI,KACJF,QAASlM,IACTqM,eAAgBrI,EAAMqI,eACtBC,YAAatI,EAAMsI,YACnBd,WAAY,GACZV,YAAa,MAXE7G,mFAoBC,IAAAmE,EAAAhE,KAClBA,KAAKoG,OAAS+B,MACdnI,KAAKoG,OAAOgC,GAAG,UAAW,WAExBpE,EAAKiB,SAAS,CAAE+C,GAAIhE,EAAKoC,OAAO4B,OAGlChI,KAAKoG,OAAOgC,GAAG,WAAY,SAAAC,GACR,YAAbA,GAAwBrE,EAAKmD,UAChB,YAAbkB,GAAwBrE,EAAK2C,YAChB,UAAb0B,GAAsBrE,EAAKqD,UACd,UAAbgB,GAAsBrE,EAAKyD,UACd,aAAbY,GAAyBrE,EAAKsD,WACjB,WAAbe,GAAuBrE,EAAKuD,WAGlCvH,KAAKoG,OAAOgC,GAAG,iBAAkB,SAAAC,GACT,gBAAlBA,EAASC,MAAwBtE,EAAKuC,WAAW8B,EAASE,SACxC,sBAAlBF,EAASC,MAA8BtE,EAAK6C,iBAAiBwB,EAASE,SACpD,SAAlBF,EAASC,MAAiBtE,EAAKgD,WAAWqB,EAASE,WAGrDvI,KAAKI,MAAM6H,iBACbjI,KAAKmG,kBACLnG,KAAKJ,MAAM4I,wDAIIC,GACbzI,KAAKJ,MAAMsI,cAAgBO,EAAUP,cACvClI,KAAKiF,SAAS,CAACiD,YAAalI,KAAKJ,MAAMsI,cACvClI,KAAKmG,oDAyKP,OACEuC,EAAA5M,EAAA0J,cAAA,OACEhG,UAAU,eACV2F,MAAO,CAAEwD,gBAAiB3I,KAAKI,MAAM0H,SACrCc,QAAS5I,KAAK+H,WAEhBW,EAAA5M,EAAA0J,cAACqD,EAAD,MACEH,EAAA5M,EAAA0J,cAACsD,EAAA,gBAAD,CAAiBtJ,UAAU,uBACxBQ,KAAKI,MAAMgH,YACVsB,EAAA5M,EAAA0J,cAACsD,EAAA,cAAD,CACEC,QAAS,CAAEC,MAAO,IAAKC,KAAM,KAC7BC,WAAW,cACXhK,IAAI,UAEJwJ,EAAA5M,EAAA0J,cAAA,OAAKhG,UAAU,eAAeQ,KAAKI,MAAMgH,aAG5CpH,KAAKI,MAAMsG,aACVgC,EAAA5M,EAAA0J,cAACsD,EAAA,cAAD,CACEC,QAAS,CAAEC,MAAO,IAAKC,KAAM,KAC7BC,WAAW,cACXhK,IAAI,eAEJwJ,EAAA5M,EAAA0J,cAAA,OAAKhG,UAAU,oBACbkJ,EAAA5M,EAAA0J,cAAA,OAAKhG,UAAU,uBAAuBQ,KAAKI,MAAMsG,YAAYF,QAC7DkC,EAAA5M,EAAA0J,cAAA,OAAKhG,UAAU,qBAAqBQ,KAAKI,MAAMsG,YAAYD,oBAtPnClB,IAAM4D,4BCyB/BC,EA5Bb,SAAAA,IAAc,IAAAvJ,EAAAG,KAAAF,OAAAC,EAAA,EAAAD,CAAAE,KAAAoJ,GAAApJ,KAOdyH,QAAU,SAAC4B,EAAMC,GACf,OAAOzJ,EAAK0J,QAAQC,KAAK,WAAY,CAACH,OAAMC,YAC3CG,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAR3B3J,KAAKuJ,QAAUK,IAAMC,OAAO,CAC1BC,QAAO,GAAAjC,OAAKkC,sCAAL,SACPC,iBAAiB,eCAJb,oBCwCJc,cA5Cb,SAAAA,IAAa,IAAApK,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiK,IACXpK,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmK,GAAAjJ,KAAAhB,QAMFkK,iBAAmB,SAACzE,GAClBA,EAAM0E,iBACN,IAAMd,EAAOxJ,EAAKO,MAAMiJ,KACxBpD,QAAQC,IAAImD,GACZxJ,EAAKD,MAAMwK,WAAWf,IAXXxJ,EAcbwK,aAAe,SAAC5E,GACd,IAAM6E,EAAQ7E,EAAM8E,OAAOD,MAC3BzK,EAAKoF,SAAS,CAAEoE,KAAMiB,KAdtBzK,EAAKO,MAAQ,CACXiJ,KAAM,IAHGxJ,wEAmBJ,IAAAmE,EAAAhE,KACP,OACE0I,EAAA5M,EAAA0J,cAAA,WACEkD,EAAA5M,EAAA0J,cAAA,sBAEAkD,EAAA5M,EAAA0J,cAAA,QAAMgF,SAAUxK,KAAKkK,kBACnBxB,EAAA5M,EAAA0J,cAAA,gBACEkD,EAAA5M,EAAA0J,cAAA,2BACAkD,EAAA5M,EAAA0J,cAAA,SACE8C,KAAK,OACLe,KAAK,OACLiB,MAAOtK,KAAKI,MAAMiJ,KAClBoB,SAAU,SAAAC,GAAC,OAAI1G,EAAKqG,aAAaK,OAIrChC,EAAA5M,EAAA0J,cAAA,SAAO8C,KAAK,SAASgC,MAAM,iBAG7B5B,EAAA5M,EAAA0J,cAAA,UAAKxF,KAAKI,MAAMuK,MAAQ,QAAU,YAvChBxB,gBCEQA,6DCEbyB,mLAEjB,OACElC,EAAA5M,EAAA0J,cAAA,OAAKhG,UAAU,cACbkJ,EAAA5M,EAAA0J,cAACqF,EAAA,EAAD,CAAMC,GAAG,SACPpC,EAAA5M,EAAA0J,cAAA,OAAKhG,UAAU,gBACbkJ,EAAA5M,EAAA0J,cAAA,OAAKuF,IAAKC,IAAMC,IAAI,mBAGxBvC,EAAA5M,EAAA0J,cAACqF,EAAA,EAAD,CAAMC,GAAG,KACPpC,EAAA5M,EAAA0J,cAAA,OAAKhG,UAAU,gBACbkJ,EAAA5M,EAAA0J,cAAA,OAAKuF,IAAKG,IAASD,IAAI,sCAXC9B,mBCNpC,SAASgB,EAAeO,IACtBA,EAAIA,GAAKpO,OAAOmJ,OACV0E,gBACFO,EAAEP,iBACNO,EAAES,aAAc,EAIlB,IAQeC,EARO,WAChB9O,OAAO+O,kBACP/O,OAAO+O,iBAAiB,iBAAkBlB,GAAgB,GAC9D7N,OAAOgP,QAAUnB,EACjB7N,OAAOiP,aAAe/O,SAAS+O,aAAepB,EAC9C7N,OAAOkP,YAAerB,mBCTXsB,UAAb,SAAAC,GAAA,SAAAD,IAAA,OAAA3L,OAAAC,EAAA,EAAAD,CAAAE,KAAAyL,GAAA3L,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2L,GAAAtL,MAAAH,KAAAjB,YAAA,OAAAe,OAAA6L,EAAA,EAAA7L,CAAA2L,EAAAC,GAAA5L,OAAA8L,EAAA,EAAA9L,CAAA2L,EAAA,EAAAvM,IAAA,SAAAoL,MAAA,WAEW,IAAAzK,EAAAG,KACHyG,EAAUzG,KAAKJ,MAAM6G,QACrBoF,EAAa7L,KAAKJ,MAAMiM,WACxB1G,EAAQ,GAKZ,OAJI0G,IACF1G,EAAQ,CAAC1G,QAAS,KAIlBiK,EAAA5M,EAAA0J,cAAA,OAAKhG,UAAU,aACbkJ,EAAA5M,EAAA0J,cAAA,OAAKhG,UAAU,kBAAkBiH,GACjCiC,EAAA5M,EAAA0J,cAAA,UAAQhG,UAAU,iBAAiBoJ,QAAS,SAAA8B,GAAC,OAAI7K,EAAKD,MAAMgJ,WAAWkD,SAAUD,EAAY1G,MAAOA,GAClGuD,EAAA5M,EAAA0J,cAACqD,EAAD,CAAK1D,MAAO,CAAC5F,MAAO,WACnBS,KAAKJ,MAAMmM,WAftBN,EAAA,CAAmCtC,cAsBtB6C,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAlM,OAAAC,EAAA,EAAAD,CAAAE,KAAAgM,GAAAlM,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkM,GAAA7L,MAAAH,KAAAjB,YAAA,OAAAe,OAAA6L,EAAA,EAAA7L,CAAAkM,EAAAC,GAAAnM,OAAA8L,EAAA,EAAA9L,CAAAkM,EAAA,EAAA9M,IAAA,SAAAoL,MAAA,WAEW,IAAAtG,EAAAhE,KACH6L,EAAa7L,KAAKJ,MAAMiM,WACxBtM,EAAQ,CAACA,MAAOS,KAAKJ,MAAML,OAC3Bd,EAAU,GACVoN,IACFpN,EAAU,CAACA,QAAS,KAEtB,IAAI0G,EAAKrF,OAAAoM,EAAA,EAAApM,CAAA,GAAOrB,EAAWc,GAG3B,OACEmJ,EAAA5M,EAAA0J,cAAA,OAAKhG,UAAU,aACbkJ,EAAA5M,EAAA0J,cAAA,UAAQhG,UAAU,wBAAwBoJ,QAAS,SAAA8B,GAAC,OAAI1G,EAAKpE,MAAMgJ,WAAWkD,SAAUD,EAAY1G,MAAOA,GACzGuD,EAAA5M,EAAA0J,cAACqD,EAAD,CAAK1D,MAAO,CAAC5F,MAAO,WACnBS,KAAKJ,MAAMmM,WAhBtBC,EAAA,CAAkC7C,aClBbgD,sBACnB,SAAAA,IAAc,IAAAtM,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmM,IACZtM,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqM,GAAAnL,KAAAhB,QAMFoM,aAAe,WACbvM,EAAKoF,SAAS,CAAEoH,WAAW,IAC3BjB,KAPAvL,EAAKO,MAAQ,CACXiM,WAAW,GAHDxM,wEAYL,IAAAmE,EAAAhE,KACP,OACE0I,EAAA5M,EAAA0J,cAAA,OACEL,MAAO,CACLnI,MAAO,QACPJ,OAAQ,QACR0P,QAAS,OACTxP,SAAU,WACVyP,OAAQ,MAGV7D,EAAA5M,EAAA0J,cAACsD,EAAA,gBAAD,CAAiBtJ,UAAU,mBACvBQ,KAAKI,MAAMiM,WACX3D,EAAA5M,EAAA0J,cAACsD,EAAA,cAAD,CACEC,QAAS,CAAEC,MAAO,IAAMC,KAAM,KAC9BC,WAAW,UACXhK,IAAI,WAEJwJ,EAAA5M,EAAA0J,cAAA,QACEhG,UAAU,qBACV2F,MAAO,CAAEqH,cAAe,IAAKD,OAAQ,MAErC7D,EAAA5M,EAAA0J,cAAA,OAAKhG,UAAU,eAAe2F,MAAO,CAAEsH,aAAc,UAArD,+CAC+C,IAC7C/D,EAAA5M,EAAA0J,cAAA,QAAMhG,UAAU,sBACbQ,KAAKJ,MAAM8M,MAAMC,OAAOrG,MAH7B,KAOAoC,EAAA5M,EAAA0J,cAACoH,EAAD,CACEb,KAAK,UACLF,YAAY,EACZjD,QAAS,SAAA8B,GAAC,OAAI1G,EAAKoI,gBACnB7M,MAAOS,KAAKJ,MAAML,WAM5BmJ,EAAA5M,EAAA0J,cAACqH,EAAD,CAAYvG,KAAMtG,KAAKJ,MAAM8M,MAAMC,OAAOrG,KAAM4B,YAAalI,KAAKI,MAAMiM,oBApDlClD,cCF/B2D,GAJA,WACb,OAAOpE,EAAA5M,EAAA0J,cAAA,OAAKL,MAAO,CAAE4H,KAAM,eCERC,eACnB,SAAAA,EAAYpN,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgN,IAChBnN,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkN,GAAAhM,KAAAhB,KAAMJ,KACDQ,MAAQ,CACXqG,QAAS7G,EAAM6G,SAHD5G,wEAMT,IAAAmE,EAAAhE,KACP,OACE0I,EAAA5M,EAAA0J,cAAA,OAAKL,MAAO,CAACnI,MAAO,QAASsP,QAAS,OAAQxP,SAAS,WAAYyP,OAAQ,MACzE7D,EAAA5M,EAAA0J,cAAA,QAAMhG,UAAU,sBAEdkJ,EAAA5M,EAAA0J,cAAA,cACIkD,EAAA5M,EAAA0J,cAAA,OAAKuF,IAAKC,IAAMC,IAAI,eAAezL,UAAU,qBAC7CkJ,EAAA5M,EAAA0J,cAAA,OAAKuF,IAAKC,IAAMC,IAAI,eAAezL,UAAU,qBAC7CkJ,EAAA5M,EAAA0J,cAAA,OAAKuF,IAAKC,IAAMC,IAAI,eAAezL,UAAU,uBAC7CkJ,EAAA5M,EAAA0J,cAAA,OAAKuF,IAAKC,IAAMC,IAAI,eAAezL,UAAU,sBAC7CkJ,EAAA5M,EAAA0J,cAAA,OAAKuF,IAAKC,IAAMC,IAAI,eAAezL,UAAU,uBAGjDkJ,EAAA5M,EAAA0J,cAAA,OAAKhG,UAAU,sBAAf,uBACoBkJ,EAAA5M,EAAA0J,cAAA,WADpB,oBAC0CkD,EAAA5M,EAAA0J,cAAA,WAD1C,uBAC8DkD,EAAA5M,EAAA0J,cAAA,WAAKkD,EAAA5M,EAAA0J,cAAA,QAAMhG,UAAU,sBAAhB,cAGnEkJ,EAAA5M,EAAA0J,cAACoH,EAAD,CAAeb,KAAK,OAAOnD,QAAS,SAAA8B,GAAC,OAAI1G,EAAKpE,MAAMqN,YAAYxG,QAASzG,KAAKI,MAAMqG,mBAxB5D0C,iCCAb+D,eACnB,SAAAA,EAAYtN,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkN,IAChBrN,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoN,GAAAlM,KAAAhB,KAAMJ,KAgBRyK,aAAe,SAACC,GACd,IAAIuB,EACWA,EAAL,KAAVvB,EACAzK,EAAKoF,SAAS,CAAC4G,aAAYsB,SAAU7C,KApBrBzK,EAuBlBuM,aAAe,WAAM,IACde,EAAYtN,EAAKO,MAAjB+M,SACY,KAAbA,GACFtN,EAAKD,MAAMwN,QAAQD,IAxBrBtN,EAAKO,MAAQ,CACXqG,QAAS7G,EAAM6G,QACfoF,YAAY,EACZsB,SAAU,IALItN,mFASC,IAAAmE,EAAAhE,KACjBxD,SAAS6Q,UAAY,SAAA3C,GACD,KAAdA,EAAE4C,SACJtJ,EAAKoI,iDAkBF,IAAAmB,EAAAvN,KACP,OACE0I,EAAA5M,EAAA0J,cAAA,OAAKL,MAAO,CAACnI,MAAO,QAASsP,QAAS,OAAQxP,SAAS,WAAYyP,OAAQ,MACzE7D,EAAA5M,EAAA0J,cAAA,QAAMhG,UAAU,sBAEdkJ,EAAA5M,EAAA0J,cAAA,cACIkD,EAAA5M,EAAA0J,cAAA,OAAKuF,IAAKyC,KAASvC,IAAI,gBAAgBzL,UAAU,sBAGrDkJ,EAAA5M,EAAA0J,cAAA,OAAKhG,UAAU,gBAAf,+BAIAkJ,EAAA5M,EAAA0J,cAAA,SAAOiI,YAAY,eAAejO,UAAU,YAAY8K,MAAOtK,KAAKI,MAAM+M,SAAU1C,SAAU,SAAAC,GAAC,OAAI6C,EAAKlD,aAAaK,EAAEH,OAAOD,UAE9H5B,EAAA5M,EAAA0J,cAACoH,EAAD,CAAeb,KAAK,SAASF,WAAY7L,KAAKI,MAAMyL,WAAYjD,QAAS,SAAA8B,GAAC,OAAI6C,EAAKnB,gBAAgB3F,QAASzG,KAAKI,MAAMqG,mBA9C5F0C,yECEhBuE,eACnB,SAAAA,EAAY9N,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0N,IAChB7N,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4N,GAAA1M,KAAAhB,KAAMJ,KAURyK,aAAe,SAACC,GACd,IAAI7L,EAEU,KAAV6L,IACF7L,EAAU,OAEZoB,EAAKoF,SAAS,CAACuB,OAAQ8D,EAAO7L,aAjBdoB,EA4BlB8N,UAAY,WAAM,IACXnH,EAAU3G,EAAKO,MAAfoG,OACL,GAAe,KAAXA,EAAc,KACXoH,EAAc/N,EAAKO,MAAnBwN,WACLA,EAAWlM,KAAK8E,GAChB3G,EAAKoF,SAAS,CAAC2I,aAAYpH,OAAQ,GAAIqF,YAAY,EAAOpF,QAAS,KACnER,QAAQC,IAAIrG,EAAKO,MAAMwN,cAlCT/N,EAsClBuM,aAAe,WAAM,IACdwB,EAAc/N,EAAKO,MAAnBwN,WACDA,EAAW5O,OAAS,GACtBa,EAAKD,MAAMiO,WAAWD,IAzCR/N,EA6ClBiO,aAAe,SAACC,GAAe,IAAAtL,EACW5C,EAAKO,MAAxCwN,EADwBnL,EACxBmL,WAAY/B,EADYpJ,EACZoJ,WAAYpF,EADAhE,EACAgE,QAC7BmH,EAAWI,OAAOJ,EAAWK,QAAQF,GAAY,GACvB,IAAtBH,EAAW5O,QACb6M,GAAa,EACbpF,EAAU,4BAEVoF,GAAa,EACbpF,EAAU,IAEZ5G,EAAKoF,SAAS,CAAC2I,aAAY/B,aAAYpF,aArDvC5G,EAAKO,MAAQ,CACXqG,QAAS,0BACToF,YAAY,EACZpN,QAAS,MACT+H,OAAQ,GACRoH,WAAY,IAPE/N,mFAoBC,IAAAmE,EAAAhE,KACjBxD,SAAS6Q,UAAY,SAAA3C,GACD,KAAdA,EAAE4C,SAAwC,KAAtBtJ,EAAK5D,MAAMoG,QACjCxC,EAAK2J,8CAmCF,IAAAJ,EAAAvN,KACHkO,EAAUlO,KAAKI,MAAMwN,WAAWO,IAAI,SAAAJ,GACtC,OACErF,EAAA5M,EAAA0J,cAAA,OAAKtG,IAAK6O,EAAYvO,UAAU,kBAC9BkJ,EAAA5M,EAAA0J,cAAA,OAAKuF,IAAKqD,KAAQ5O,UAAU,iBAAiByL,IAAI,uBAAuBrC,QAAS,SAAA8B,GAAC,OAAG6C,EAAKO,aAAaC,MAEvGrF,EAAA5M,EAAA0J,cAAA,OAAKhG,UAAU,mBAAmBuO,MAKxC,OACErF,EAAA5M,EAAA0J,cAAA,OAAKL,MAAO,CAACnI,MAAO,QAASsP,QAAS,OAAQxP,SAAS,WAAYyP,OAAQ,MACzE7D,EAAA5M,EAAA0J,cAAA,QAAMhG,UAAU,sBAEdkJ,EAAA5M,EAAA0J,cAAA,cACIkD,EAAA5M,EAAA0J,cAAA,OAAKuF,IAAKsD,KAAYpD,IAAI,qBAAqBzL,UAAU,sBAG7DkJ,EAAA5M,EAAA0J,cAAA,OAAKhG,UAAU,gBACbkJ,EAAA5M,EAAA0J,cAAA,OAAKhG,UAAU,eACZ0O,GAEHxF,EAAA5M,EAAA0J,cAAA,OAAKhG,UAAU,cACbkJ,EAAA5M,EAAA0J,cAAA,SAAOiI,YAAY,aAAajO,UAAU,mBAAmB8K,MAAOtK,KAAKI,MAAMoG,OAAQiE,SAAU,SAAAC,GAAC,OAAI6C,EAAKlD,aAAaK,EAAEH,OAAOD,UACjI5B,EAAA5M,EAAA0J,cAAA,OAAKuF,IAAKtJ,KAAKjC,UAAU,iBAAiByL,IAAI,oBAAoBrC,QAAS,SAAA8B,GAAC,OAAG6C,EAAKI,aAAaxI,MAAO,CAAC1G,QAASuB,KAAKI,MAAM3B,aAOjIiK,EAAA5M,EAAA0J,cAACoH,EAAD,CAAeb,KAAK,SAASF,WAAY7L,KAAKI,MAAMyL,WAAYjD,QAAS,SAAA8B,GAAC,OAAI6C,EAAKnB,gBAAgB3F,QAASzG,KAAKI,MAAMqG,mBA3FzF0C,iCCFnBmF,eACnB,SAAAA,EAAY1O,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsO,IACjBzO,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwO,GAAAtN,KAAAhB,KAAMJ,KAeRyK,aAAe,SAAAC,GACb,IAAIuB,EACYA,EAAN,KAAVvB,EACAzK,EAAKoF,SAAS,CAAE4G,aAAYsB,SAAU7C,KAnBrBzK,EAsBnBuM,aAAe,WACbvM,EAAKD,MAAMqN,YArBXpN,EAAKO,MAAQ,CACXyL,YAAY,EACZsB,SAAUvN,EAAMuN,UAJDtN,mFAQC,IAAAmE,EAAAhE,KAClBxD,SAAS6Q,UAAY,SAAA3C,GACD,KAAdA,EAAE4C,SACJtJ,EAAKoI,iDAeF,IAAAmB,EAAAvN,KACH6L,GAAa,EACb0C,EAAgBvO,KAAKJ,MAAM2O,cAC3B9H,EAAUzG,KAAKJ,MAAM6G,QASzB,OARI8H,EAAgB,GAClBA,EAAa,GAAA1G,OAAM0G,EAAN,sBACb1C,GAAa,IAEb0C,EAAa,GAAA1G,OAAM0G,EAAN,qBACb1C,GAAa,GAIbnD,EAAA5M,EAAA0J,cAAA,OACEL,MAAO,CACLnI,MAAO,QACPsP,QAAS,OACTxP,SAAU,WACVyP,OAAQ,MAGV7D,EAAA5M,EAAA0J,cAAA,QAAMhG,UAAU,sBACdkJ,EAAA5M,EAAA0J,cAAA,UAAQL,MAAO,CAACsH,aAAc,MAC5B/D,EAAA5M,EAAA0J,cAAA,OACEuF,IAAKyD,KACLvD,IAAI,mBACJzL,UAAU,sBAIdkJ,EAAA5M,EAAA0J,cAAA,OAAKhG,UAAU,gBAAf,gFAKAkJ,EAAA5M,EAAA0J,cAAA,OAAKhG,UAAU,sBAAf,2BAEEkJ,EAAA5M,EAAA0J,cAAA,WACCxF,KAAKI,MAAM+M,UAGdzE,EAAA5M,EAAA0J,cAAA,OAAKhG,UAAU,eAAe2F,MAAO,CAAEsJ,UAAW,SAAlD,4BAGA/F,EAAA5M,EAAA0J,cAAA,OAAKL,MAAO,CAACsJ,UAAW,MAAOhC,aAAc,UAC3C/D,EAAA5M,EAAA0J,cAAA,OAAKhG,UAAU,kCAAf,WACAkJ,EAAA5M,EAAA0J,cAAA,OAAKhG,UAAU,iBAAiB2F,MAAO,CAAEsJ,UAAW,MACjDF,IAIL7F,EAAA5M,EAAA0J,cAACoH,EAAD,CACEb,KAAK,SACLF,WAAYA,EACZjD,QAAS,SAAA8B,GAAC,OAAI6C,EAAKnB,gBACnB3F,QAASA,aAlFmB0C,aCDnBuF,8MAEnBtC,aAAe,WACbvM,EAAKD,MAAM4I,qFAGL,IAAAxE,EAAAhE,KACFkO,EAAUlO,KAAKJ,MAAMsO,QAAQS,KAAK,MAAM9G,OAAO,OAEnD,OACEa,EAAA5M,EAAA0J,cAAA,OACEL,MAAO,CACLnI,MAAO,QACPsP,QAAS,OACTxP,SAAU,WACVyP,OAAQ,MAGV7D,EAAA5M,EAAA0J,cAAA,QAAMhG,UAAU,qBAAqB2F,MAAO,CAACqH,cAAe,MAE1D9D,EAAA5M,EAAA0J,cAAA,WACEkD,EAAA5M,EAAA0J,cAAA,OAAKhG,UAAU,uBACZ0O,GAEHxF,EAAA5M,EAAA0J,cAAA,OAAKhG,UAAU,mBAAf,mBAKFkJ,EAAA5M,EAAA0J,cAACoJ,EAAD,CACE7C,KAAK,OACLF,YAAY,EACZjD,QAAS,SAAA8B,GAAC,OAAI1G,EAAKoI,gBACnB7M,MAAOS,KAAKJ,MAAML,iBAjCW4J,aCApBuF,8MAEnBtC,aAAe,WACbvM,EAAKD,MAAM4I,qFAGL,IAAAxE,EAAAhE,KACQA,KAAKJ,MAAMsO,QAAQS,KAAK,MAAM9G,OAAO,OAEnD,OACEa,EAAA5M,EAAA0J,cAAA,OACEL,MAAO,CACLnI,MAAO,QACPsP,QAAS,OACTxP,SAAU,WACVyP,OAAQ,MAGV7D,EAAA5M,EAAA0J,cAAA,QAAMhG,UAAU,qBAAqB2F,MAAO,CAACqH,cAAe,MAE1D9D,EAAA5M,EAAA0J,cAAA,WACEkD,EAAA5M,EAAA0J,cAAA,OAAKhG,UAAU,wBAGfkJ,EAAA5M,EAAA0J,cAAA,OAAKhG,UAAU,mBAAf,cAKFkJ,EAAA5M,EAAA0J,cAACoJ,EAAD,CACE7C,KAAK,cACLF,YAAY,EACZjD,QAAS,SAAA8B,GAAC,OAAI1G,EAAKoI,gBACnB7M,MAAOS,KAAKJ,MAAML,iBAjCW4J,sBC4B1BC,GA5Bb,SAAAA,IAAc,IAAAvJ,EAAAG,KAAAF,OAAAC,EAAA,EAAAD,CAAAE,KAAAoJ,GAAApJ,KAOdyH,QAAU,SAAC4B,EAAMC,GACf,OAAOzJ,EAAK0J,QAAQC,KAAK,WAAY,CAACH,OAAMC,YAC3CG,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAR3B3J,KAAKuJ,QAAUK,IAAMC,OAAO,CAC1BC,QAAO,GAAAjC,OAAKkC,sCAAL,SACPC,iBAAiB,KC6RR6E,uBA1Rb,SAAAA,EAAYjP,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6O,IACjBhP,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+O,GAAA7N,KAAAhB,KAAMJ,KAqBR6H,QAAU,SAAA4B,GAGRxJ,EAAK0J,QACF9B,QAAQ4B,EAHG,4BAIXI,KAAK,SAAAqF,GACJjP,EAAKoF,SAAS,CAAE6J,KAAMA,EAAKzF,SAE5B0F,MAAM,SAAApE,GAAK,OAAI1E,QAAQC,IAAIyE,MA9Bb9K,EAiCnBmP,eAAiB,WACfnP,EAAKuG,OAAOC,KAAK,gBAlCAxG,EAkEnBoP,WAAa,WACXpP,EAAKuG,OAAOC,KAAK,sBAnEAxG,EAuEnBqP,WAAa,WACXrP,EAAKoF,SAAS,CAACkK,UAAU,EAAOC,QAAQ,IACxCnJ,QAAQC,IAAI,WACZD,QAAQC,IAAIrG,EAAKO,MAAMiP,SACvBjE,IACAxE,WAAW,WACT/G,EAAKuG,OAAOC,KAAK,cAIjBO,WAAW,WACT/G,EAAKyP,YACJ,OACF,MApFczP,EAuFnB0P,eAAiB,WAAM,IAAA9M,EACe5C,EAAKO,MAApC8N,EADgBzL,EAChByL,QAAShS,EADOuG,EACPvG,MAAOsT,EADA/M,EACA+M,YACrBvJ,QAAQC,IAAI,mBACZ,IACIuJ,EADAC,EAAgB5P,OAAA6P,GAAA,EAAA7P,CAAOD,EAAKO,MAAMsP,kBAEtC,GAAc,IAAVxT,EACF+J,QAAQC,IAAI,iCACZuJ,EAAgBvB,EAAQ,GACxBrO,EAAKoF,SAAS,CAACwK,gBAAeD,YAAa,QACtC,CACLvJ,QAAQC,IAAI,iBACZ,IACI0J,EADAC,EAAa3B,EAAQsB,GAAaM,WAEtC,GAAIJ,EAAiBzB,QAAQ4B,IAAe,EAC1C5J,QAAQC,IAAIwJ,GACZzJ,QAAQC,IAAIwJ,EAAiBK,SAASF,IACtC5J,QAAQC,IAAI,oCACZ0J,EAAYF,EAAiBzB,QAAQ4B,GAAc,KACjCH,EAAiB1Q,SAAQ4Q,EAAY,GACvDH,EAAgBC,EAAiBE,GACjCJ,EAActB,EAAQD,QAAQwB,GAC9B5P,EAAKoF,SAAS,CAACwK,gBAAeD,oBACzB,CACLvJ,QAAQC,IAAI,gCAEZ,IADA,IAAI8J,GAAQ,GACJA,GAAO,CACTR,IAAgBtB,EAAQlP,SAC1BwQ,EAAc,GAEhB,IAAIS,EAAa/B,EAAQsB,GACzBvJ,QAAQC,IAAI,cAAc+J,GACtBP,EAAiBK,SAASE,IAC5BR,EAAgBQ,EAChBpQ,EAAKoF,SAAS,CAACwK,gBAAeD,gBAC9BQ,GAAQ,GAERR,QA3HS3P,EAkInByP,SAAW,WACTzP,EAAK0P,iBACLtJ,QAAQC,IAAI,cAFG,IAAA/C,EAGctD,EAAKO,MAA7BlE,EAHUiH,EAGVjH,MACLA,IACA,IACIqM,EAAU,CAAC/B,OANArD,EAGHsM,cAG0BhJ,QADxB,eAEVyJ,EAAQpQ,OAAA6P,GAAA,EAAA7P,CAAOD,EAAKO,MAAM8P,UAC1Bb,EAAOvP,OAAA6P,GAAA,EAAA7P,CAAOD,EAAKO,MAAMiP,SAE7BA,EAAQrB,OAAOqB,EAAQpB,QAAQpO,EAAKuG,OAAO4B,IAAK,GAEhDkI,EAASxO,KAAK2N,EAAQpT,KAAKkU,MAAMlU,KAAKE,SAASkT,EAAQrQ,UAEvDa,EAAKuG,OAAOC,KAAK,iBAAkB,CAACiC,KAAM,cAAeC,YACzD1I,EAAKoF,SAAS,CAACiL,WAAUhU,UAEzB0K,WAAW,WACT/G,EAAKuG,OAAOC,KAAK,WAAY,CAAEgC,SAAU,cACxC,KACHzB,WAAW,WACT/G,EAAKuQ,gBACJ,MAxJcvQ,EA2JnBuQ,aAAe,WACb,IAAIF,EAAQpQ,OAAA6P,GAAA,EAAA7P,CAAOD,EAAKO,MAAM8P,UAC1BtO,EAAO,KAAOsO,EAASlR,OAAS,KACpCiH,QAAQC,IAAI,kBACZD,QAAQC,IAAIgK,GAEZA,EAASG,QAAQ,SAACrI,EAAIsI,GACpB1J,WAAW,WACT/G,EAAKuG,OAAOC,KAAK,WAAY,CAAE2B,KAAIK,SAAU,aAC5C,KAAOiI,EAAQ,MAEpB1J,WAAW,WACT/G,EAAKoF,SAAS,CAACsL,aAAa,IAC5B1Q,EAAKuG,OAAOC,KAAK,WAAY,CAACgC,SAAU,YACvCzG,IAzKc/B,EA4KnBoB,KAAO,SAAA+G,GAAM,IAAA9C,EACsBrF,EAAKO,MAAhCoQ,EADKtL,EACLsL,cAAeN,EADVhL,EACUgL,SAcnB,GADAM,EAAc9O,KAAKsG,GACdnI,EAAK4Q,cAAcD,EAAeN,GAgD5BM,EAAcxR,SAAWkR,EAASlR,QAC3Ca,EAAKuG,OAAOC,KAAK,WAAY,CAAEgC,SAAU,UACzCxI,EAAKoF,SAAS,CAACuL,cAAe,GAAID,aAAa,IAC/C3J,WAAW,WACT/G,EAAKyP,YACJ,MAEHzP,EAAKuG,OAAOC,KAAK,WAAY,CAAE2B,KAAIK,SAAU,iBAnD7C,GAFAxI,EAAKuG,OAAOC,KAAK,WAAY,CAAE2B,KAAIK,SAAU,YAEX,IAA9BxI,EAAKO,MAAM8N,QAAQlP,OACrB4H,WAAW,WACT,IAEI2B,EAAU,CAAC/B,OAFF3G,EAAKO,MAAMqP,cAEDhJ,QADT,cAEd5G,EAAKuG,OAAOC,KAAK,iBAAkB,CAACiC,KAAM,OAAQC,YAClD3B,WAAW,WACT/G,EAAKoF,SAAS,CAACkK,UAAU,EAAMC,QAAQ,IACvCvP,EAAKD,MAAM8Q,YACV,MACH,UACG,KACAjB,EAAiB5P,EAAKO,MAAtBqP,cACDC,EAAgB5P,OAAA6P,GAAA,EAAA7P,CAAOD,EAAKO,MAAMsP,kBACtCA,EAAiB1B,OAAO0B,EAAiBzB,QAAQwB,GAAgB,GACjE,IACIlH,EAAU,CAAC9B,QADD,sBACUD,OAAQiJ,GAEhC5P,EAAKoF,SAAS,CAACyK,mBAAkBa,aAAa,IAC9C3J,WAAW,WACT/G,EAAKuG,OAAOC,KAAK,iBAAkB,CAACiC,KAAM,oBAAqBC,aAC/D,MAC8B,IAA5BmH,EAAiB1Q,OACnB4H,WAAW,WACT,IAEI2B,EAAU,CAAC/B,OAFFkJ,EAAiB,GAEPjJ,QADT,QAEd5G,EAAKuG,OAAOC,KAAK,iBAAkB,CAACiC,KAAM,OAAQC,YAClD3B,WAAW,WACT/G,EAAKoF,SAAS,CAACkK,UAAU,EAAMC,QAAQ,IACvCvP,EAAKD,MAAM8Q,YACV,MACH,OAGF7Q,EAAKoF,SAAS,CAACuL,cAAe,KAC9B5J,WAAW,WACT/G,EAAKyP,YACL,SArOOzP,EAuPnB4Q,cAAgB,SAACD,EAAeN,GAK9B,OAAOA,EAASM,EAAcxR,OAAS,KACrCwR,EAAcA,EAAcxR,OAAS,IA7PtBa,EAkQnB8Q,mBAAqB,aAhQnB9Q,EAAK0J,QAAU,IAAIH,GACnBvJ,EAAKO,MAAQ,CACXkG,KAAM1G,EAAM0G,KACZ4H,QAAStO,EAAMsO,QACfqC,aAAa,EACbzB,KAAM,KACNO,QAAS,KACTa,SAAU,GACVM,cAAe,GACfd,iBAAkB9P,EAAMsO,QACxBuB,cAAe,KACfD,YAAa,EACbjJ,WAAY,KACZrK,MAAO,EACPuK,QAAS,6CACT0I,UAAU,EACVC,QAAQ,GAlBOvP,mFAqCC,IAAAmE,EAAAhE,KAClBA,KAAKoG,OAAS+B,MAEdnI,KAAKoG,OAAOgC,GAAG,UAAW,WACxBpE,EAAKoC,OAAOC,KAAK,OAAQrC,EAAK5D,MAAMkG,QAGtCtG,KAAKoG,OAAOgC,GAAG,cAAe,SAAAiH,GAC5BrL,EAAKiB,SAAS,CAAEoK,YAChBrL,EAAKpE,MAAMgR,oBAAoBvB,EAAQrQ,UAGzCgB,KAAKoG,OAAOgC,GAAG,oBAAqB,SAAAiH,GAClCA,EAAQrB,OAAOqB,EAAQpB,QAAQjK,EAAKoC,OAAO4B,IAAK,GAChDhE,EAAKiB,SAAS,CAAEoK,YAChBrL,EAAKkL,eAGPlP,KAAKoG,OAAOgC,GAAG,WAAY,SAAAJ,GACrBhE,EAAK5D,MAAMmQ,aAAavM,EAAK/C,KAAK+G,KAGxChI,KAAKoG,OAAOgC,GAAG,kBAAmB,WAChCpE,EAAKgL,mBAGPhP,KAAKgP,kDA4ME,IAAAzB,EAAAvN,KACH6Q,EAAc,CAAEvE,QAAS,QACzBtM,KAAKJ,MAAMiR,cACbA,EAAc,CAAEvE,QAAS,SAElBxM,OAAAoM,EAAA,EAAApM,CAAA,GAAQ+Q,GAAjB,IACIC,EAAa,KAKjB,OAJI9Q,KAAKJ,MAAMiR,cACbC,EAAapI,EAAA5M,EAAA0J,cAACqH,EAAD,CAAYvG,KAAMtG,KAAKI,MAAMkG,KAAM2B,gBAAgB,EAAMC,aAAa,EAAMM,UAAW,SAAAkC,GAAC,OAAI6C,EAAK0B,iBAGzG6B,SAvRQ3H,cCGE4H,eACnB,SAAAA,IAAc,IAAAlR,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+Q,IACZlR,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiR,GAAA/P,KAAAhB,QAYFiN,SAAW,WACe,SAApBpN,EAAKO,MAAM4Q,OACbnR,EAAKoF,SAAS,CAAC+L,KAAM,OACrBpK,WAAW,WACT/G,EAAKoF,SAAS,CAAC+L,KAAM,UAAWrI,gBAAiB,aAChD,OAEmB,YAApB9I,EAAKO,MAAM4Q,OACbnR,EAAKoF,SAAS,CAAC+L,KAAM,OACrBpK,WAAW,WACT/G,EAAKoF,SAAS,CAAC+L,KAAM,aAAcrI,gBAAiB,aACnD,OAEmB,eAApB9I,EAAKO,MAAM4Q,OACbnR,EAAKoF,SAAS,CAAC+L,KAAM,OACrBpK,WAAW,WACT/G,EAAKoF,SAAS,CAAC+L,KAAM,aAAcrI,gBAAiB,aACnD,OAEmB,eAApB9I,EAAKO,MAAM4Q,OACbnR,EAAKoF,SAAS,CAAC+L,KAAM,OACrBpK,WAAW,WACT/G,EAAKoF,SAAS,CAAC+L,KAAM,cAAerI,gBAAiB,aACpD,QApCO9I,EAwCduN,QAAU,SAACD,GACTtN,EAAKoF,SAAS,CAACgM,SAAU9D,IACzBtN,EAAKoN,YA1COpN,EA6CdgO,WAAa,SAACD,GAAe,IACtBM,EAAWrO,EAAKO,MAAhB8N,QACLN,EAAWyC,QAAQ,SAAAa,GACjBhD,EAAQxM,KAAKwP,KAEfrR,EAAKoF,SAAS,CAACiJ,UAASY,MAAM,EAAMrI,QAAS,+BAC7C5G,EAAKoN,YAnDOpN,EAsDd+Q,oBAAsB,SAACvB,GACjBA,EAAU,EACZxP,EAAKoF,SAAS,CAACkM,iBAAkB9B,EAAS5I,QAAS,KAEnD5G,EAAKoF,SAAS,CAACkM,iBAAkB9B,EAAS5I,QAAS,gCA1DzC5G,EA8Dd2I,UAAY,WACV3I,EAAKoF,SAAS,CAAC+L,KAAM,OACrBpK,WAAW,WACT/G,EAAKoF,SAAS,CAAC4L,aAAa,EAAMlI,gBAAiB,iBAClD,OAlES9I,EAqEd6Q,SAAW,WACT7Q,EAAKoF,SAAS,CAAC+L,KAAM,WAAYH,aAAa,EAAOlI,gBAAiB,aApEtE9I,EAAKO,MAAQ,CACXuI,gBAAiB,UACjBqI,KAAM,OACNvK,QAAS,GACTwK,SAAU,GACV/C,QAAS,GACTY,MAAM,EACNqC,iBAAkB,EAClBN,aAAa,GAVHhR,wEAyEL,IAAAmE,EAAAhE,KAyCP,OACE0I,EAAA5M,EAAA0J,cAAA,OAAKhG,UAAU,WAAW2F,MAAO,CAAEwD,gBAAiB3I,KAAKI,MAAMuI,kBAC7DD,EAAA5M,EAAA0J,cAAC4L,GAAD,OACGpR,KAAKI,MAAMyQ,aACZnI,EAAA5M,EAAA0J,cAACsD,EAAA,gBAAD,CAAiBtJ,UAAU,cA3CP,SAApBwE,EAAK5D,MAAM4Q,KACbtI,EAAA5M,EAAA0J,cAACsD,EAAA,cAAD,CAAeC,QAAS,CAACC,MAAO,IAAMC,KAAM,KAAMC,WAAW,UAAUhK,IAAI,QACzEwJ,EAAA5M,EAAA0J,cAAC6L,GAAD,CAAMpE,SAAU,SAAAvC,GAAC,OAAI1G,EAAKiJ,YAAYxG,QAASzC,EAAK5D,MAAMqG,WAGtC,YAApBzC,EAAK5D,MAAM4Q,KACbtI,EAAA5M,EAAA0J,cAACsD,EAAA,cAAD,CAAeC,QAAS,CAACC,MAAO,IAAMC,KAAM,KAAMC,WAAW,UAAUhK,IAAI,aACzEwJ,EAAA5M,EAAA0J,cAAC8L,GAAD,CAASlE,QAAS,SAAAD,GAAQ,OAAInJ,EAAKoJ,QAAQD,OAGvB,eAApBnJ,EAAK5D,MAAM4Q,KACbtI,EAAA5M,EAAA0J,cAACsD,EAAA,cAAD,CAAeC,QAAS,CAACC,MAAO,IAAMC,KAAM,KAAMC,WAAW,UAAUhK,IAAI,WACzEwJ,EAAA5M,EAAA0J,cAAC+L,GAAD,CAAY1D,WAAY,SAAAK,GAAO,OAAIlK,EAAK6J,WAAWK,OAG/B,eAApBlK,EAAK5D,MAAM4Q,KACbtI,EAAA5M,EAAA0J,cAACsD,EAAA,cAAD,CAAeC,QAAS,CAACC,MAAO,IAAMC,KAAM,KAAMC,WAAW,UAAUhK,IAAI,WACzEwJ,EAAA5M,EAAA0J,cAACgM,GAAD,CAAYrE,SAAUnJ,EAAK5D,MAAM6Q,SAAUxK,QAASzC,EAAK5D,MAAMqG,QAAQ8H,cAAevK,EAAK5D,MAAM+Q,iBAAkBlE,SAAU,SAAAvC,GAAC,OAAI1G,EAAKiJ,eAGnH,gBAApBjJ,EAAK5D,MAAM4Q,KACbtI,EAAA5M,EAAA0J,cAACsD,EAAA,cAAD,CAAeC,QAAS,CAACC,MAAO,IAAMC,KAAM,KAAMC,WAAW,UAAUhK,IAAI,WACzEwJ,EAAA5M,EAAA0J,cAACiM,GAAD,CAAavD,QAASlK,EAAK5D,MAAM8N,QAAS3O,MAAM,UAAUiJ,UAAW,SAAAkC,GAAC,OAAI1G,EAAKwE,gBAG3D,aAApBxE,EAAK5D,MAAM4Q,KACbtI,EAAA5M,EAAA0J,cAACsD,EAAA,cAAD,CAAeC,QAAS,CAACC,MAAO,IAAMC,KAAM,KAAMC,WAAW,UAAUhK,IAAI,WACzEwJ,EAAA5M,EAAA0J,cAACkM,GAAD,CAAUxD,QAASlK,EAAK5D,MAAM8N,QAAS3O,MAAM,UAAUiJ,UAAW,SAAAkC,GAAC,OAAI1G,EAAKwE,qBAFhF,GAOS,WACT,GAAIxE,EAAK5D,MAAM0O,KACb,OAAQpG,EAAA5M,EAAA0J,cAACmM,GAAD,CAAMrL,KAAMtC,EAAK5D,MAAM6Q,SAAU/C,QAASlK,EAAK5D,MAAM8N,QAAS0C,oBAAqB,SAAAvB,GAAO,OAAIrL,EAAK4M,oBAAoBvB,IAAUwB,YAAa7M,EAAK5D,MAAMyQ,YAAaH,SAAU,SAAAhG,GAAC,OAAI1G,EAAK0M,cAajM5B,WA3HyB3F,aCsBnByI,iOAbX,OACElJ,EAAA5M,EAAA0J,cAAA,OAAKhG,UAAU,OACbkJ,EAAA5M,EAAA0J,cAACqM,EAAD,MACAnJ,EAAA5M,EAAA0J,cAACsM,EAAA,EAAD,KACEpJ,EAAA5M,EAAA0J,cAACuM,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAKxJ,EAAA5M,EAAA0J,cAAC2M,GAAD,SACnCzJ,EAAA5M,EAAA0J,cAACuM,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASG,UAAWjG,cAX9BhD,uBCLEkJ,QACW,cAA7B/V,OAAOgW,SAASC,UAEe,UAA7BjW,OAAOgW,SAASC,UAEhBjW,OAAOgW,SAASC,SAAS7F,MACvB,kECPN8F,IAASN,OACPxJ,EAAA5M,EAAA0J,cAACiN,GAAA,EAAD,KACE/J,EAAA5M,EAAA0J,cAACkN,GAAD,OAEFlW,SAASmW,eAAe,SD4GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrJ,KAAK,SAAAsJ,GACjCA,EAAaC,6EE3HnBxX,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.4dd093e0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/TapCodeLogo.5c3fe92a.svg\";","const generateGradient = () => {\n\n  var hexValues = [\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"a\",\"b\",\"c\",\"d\",\"e\"];\n  \n  function populate(a) {\n    for ( var i = 0; i < 6; i++ ) {\n      var x = Math.round( Math.random() * 14 );\n      var y = hexValues[x];\n      a += y;\n    }\n    return a;\n  }\n  \n  return populate('#');\n}\n\n\nexport default generateGradient","var bool = false\n\nif (typeof window !== 'undefined') {\n  bool =\n    'ontouchstart' in window ||\n    (window.DocumentTouch && document instanceof window.DocumentTouch)\n}\n\nexport const HAS_TOUCH = bool\n","export const STYLE = {\n  borderRadius: 'inherit',\n  height: '100%',\n  left: 0,\n  position: 'absolute',\n  top: 0,\n  width: '100%'\n}\n","/**\n * @t is the current time (or position) of the tween. This can be seconds or frames, steps, seconds, ms, whatever – as long as the unit is the same as is used for the total time [3].\n * @b is the beginning value of the property.\n * @c is the change between the beginning and destination value of the property.\n * @d is the total time of the tween.\n */\n\nexport function easeOutQuint(t, b, c, d) {\n  return c * ((t = t / d - 1) * t * t * t * t + 1) + b\n}\n","import { easeOutQuint } from './easing'\n\nconst SQRT_2 = Math.sqrt(2)\nconst { cos, max, min } = Math\n\nfunction getPress(blot) {\n  return min(blot.duration, Date.now() - blot.mouseDown)\n}\n\nfunction getRelease(blot) {\n  return blot.mouseUp > 0 ? Date.now() - blot.mouseUp : 0\n}\n\nfunction getRadius(blot) {\n  let { duration, radius } = blot\n\n  let down = easeOutQuint(getPress(blot), 0, radius, duration) * 0.85\n  let up = easeOutQuint(getRelease(blot), 0, radius, duration) * 0.15\n  let undulation = radius * 0.02 * cos(Date.now() / duration)\n\n  return max(0, down + up + undulation)\n}\n\nexport function getMaxRadius(height, width, radius) {\n  return min(max(height, width) * 0.5, radius)\n}\n\nexport function getBlotOpacity(blot, opacity) {\n  return easeOutQuint(getRelease(blot), opacity, -opacity, blot.duration)\n}\n\nexport function getBlotOuterOpacity(blot, opacity) {\n  return min(\n    getBlotOpacity(blot, opacity),\n    easeOutQuint(getPress(blot), 0, 0.3, blot.duration * 3)\n  )\n}\n\nexport function getBlotShiftX(blot, size, width) {\n  return min(1, getRadius(blot) / size * 2 / SQRT_2) * (width / 2 - blot.x)\n}\n\nexport function getBlotShiftY(blot, size, height) {\n  return min(1, getRadius(blot) / size * 2 / SQRT_2) * (height / 2 - blot.y)\n}\n\nexport function getBlotScale(blot) {\n  return getRadius(blot) / blot.radius\n}\n","/**\n * Ink Store\n * Keeps track of changes to ripple epicenters\n * so that <Ink /> can focus on rendering them.\n */\n\nimport { getBlotOuterOpacity } from './equations'\n\nlet killStale = ({ mouseUp, duration }) =>\n  !mouseUp || Date.now() - mouseUp < duration\n\nexport function Store(publicize) {\n  let _data = []\n  let _playing = false\n  let _frame\n\n  let Store = {\n    each(callback, scope) {\n      for (var i = 0, l = _data.length; i < l; i++) {\n        callback.call(scope, _data[i])\n      }\n    },\n\n    play() {\n      if (!_playing) {\n        _playing = true\n        Store.update()\n      }\n    },\n\n    stop() {\n      _playing = false\n      cancelAnimationFrame(_frame)\n    },\n\n    getTotalOpacity(opacity) {\n      let answer = 0\n\n      for (var i = 0, l = _data.length; i < l; i++) {\n        answer += getBlotOuterOpacity(_data[i], opacity)\n      }\n\n      return answer\n    },\n\n    update() {\n      _data = _data.filter(killStale)\n\n      if (_data.length) {\n        _frame = requestAnimationFrame(Store.update)\n      } else {\n        Store.stop()\n      }\n\n      publicize()\n    },\n\n    add(props) {\n      _data.push(props)\n      Store.play()\n    },\n\n    release(time) {\n      for (let i = _data.length - 1; i >= 0; i--) {\n        if (!_data[i].mouseUp) {\n          return (_data[i].mouseUp = time)\n        }\n      }\n    }\n  }\n\n  return Store\n}\n","export function merge(/* args */) {\n  let copy = {}\n\n  for (var i = 0; i < arguments.length; i++) {\n    let subject = arguments[i]\n\n    if (subject) {\n      for (var key in subject) {\n        copy[key] = subject[key]\n      }\n    }\n  }\n\n  return copy\n}\n","/**\n * Ink\n * Fills a container with an SVG object that provides feedback on mouse/touch\n * events with a rippling pool.\n */\n\nimport React from 'react'\nimport { HAS_TOUCH } from './util/hasTouch'\nimport { pixelRatio } from './util/pixelRatio'\nimport { STYLE } from './style'\nimport { Store } from './util/store'\nimport { merge } from './util/merge'\nimport {\n  getBlotScale,\n  getBlotOpacity,\n  getBlotShiftX,\n  getBlotShiftY,\n  getMaxRadius\n} from './util/equations'\n\nconst TAU = Math.PI * 2\nconst MOUSE_LEFT = 0\n\nconst defaultProps = {\n  background: true,\n  color: '#FFFFFF',\n  className: 'ink',\n  duration: 1000,\n  opacity: 0.25,\n  radius: 150,\n  recenter: true,\n  hasTouch: HAS_TOUCH,\n}\n\nexport default class Ink extends React.PureComponent {\n  constructor(props) {\n    super(...arguments)\n\n    this.state = {\n      density: 0.2,\n      height: 0,\n      store: Store(this.tick.bind(this)),\n      width: 0\n    }\n\n    this.touchEvents = this.touchEvents()\n  }\n\n  touchEvents() {\n    if (this.props.hasTouch) {\n      return {\n        onTouchStart: this._onPress.bind(this),\n        onTouchEnd: this._onRelease.bind(this),\n        onTouchCancel: this._onRelease.bind(this)\n      }\n    } else {\n      return {\n        onMouseDown: this._onPress.bind(this),\n        onMouseUp: this._onRelease.bind(this),\n        onMouseLeave: this._onRelease.bind(this)\n      }\n    }\n  }\n\n  tick() {\n    let { ctx, density, height, width, store } = this.state\n\n    ctx.save()\n\n    ctx.scale(density, density)\n\n    ctx.clearRect(0, 0, width, height)\n\n    ctx.fillStyle = this.props.color\n\n    if (this.props.background) {\n      ctx.globalAlpha = store.getTotalOpacity(this.props.opacity)\n      ctx.fillRect(0, 0, width, height)\n    }\n\n    store.each(this.makeBlot, this)\n\n    ctx.restore()\n  }\n\n  makeBlot(blot) {\n    let { ctx, height, width } = this.state\n    let { x, y, radius } = blot\n\n    ctx.globalAlpha = getBlotOpacity(blot, this.props.opacity)\n    ctx.beginPath()\n\n    if (this.props.recenter) {\n      let size = Math.max(height, width)\n\n      x += getBlotShiftX(blot, size, width)\n      y += getBlotShiftY(blot, size, height)\n    }\n\n    ctx.arc(x, y, radius * getBlotScale(blot), 0, TAU)\n\n    ctx.closePath()\n    ctx.fill()\n  }\n\n  componentWillUnmount() {\n    this.state.store.stop()\n  }\n\n  pushBlot(timeStamp, clientX, clientY) {\n    let el = this.canvas\n\n    // 0.13 support\n    if (el.getDOMNode && 'function' === typeof el.getDOMNode) {\n      el = el.getDOMNode()\n    }\n\n    let { top, bottom, left, right } = el.getBoundingClientRect()\n\n\n    let ctx = this.state.ctx || el.getContext('2d')\n    let density = pixelRatio(ctx)\n    let height = bottom - top\n    let width = right - left\n    let radius = getMaxRadius(height, width, this.props.radius)\n\n    this.setState({ ctx, density, height, width }, () => {\n      this.state.store.add({\n        duration: this.props.duration,\n        mouseDown: timeStamp,\n        mouseUp: 0,\n        radius: radius,\n        x: clientX - left,\n        y: clientY - top\n      })\n    })\n  }\n\n  setCanvas(el) {\n    this.canvas = el\n  }\n\n  render() {\n    let { className, density, height, width } = this.state\n    let { style } = this.props\n\n    let props = merge(\n      {\n        className: className,\n        ref: this.setCanvas.bind(this),\n        height: height * density,\n        width: width * density,\n        onDragOver: this._onRelease,\n        style: merge(STYLE, style)\n      },\n      this.touchEvents\n    )\n\n    return React.createElement('canvas', props)\n  }\n\n  _onPress(event) {\n    let { button, ctrlKey, clientX, clientY, changedTouches } = event\n    let timeStamp = Date.now()\n\n    if (changedTouches) {\n      for (var i = 0; i < changedTouches.length; i++) {\n        let { clientX, clientY } = changedTouches[i]\n        this.pushBlot(timeStamp, clientX, clientY)\n      }\n    } else if (button === MOUSE_LEFT && !ctrlKey) {\n      this.pushBlot(timeStamp, clientX, clientY)\n    }\n  }\n\n  _onRelease() {\n    this.state.store.release(Date.now())\n  }\n}\n\nInk.defaultProps = defaultProps\n","// Good stuff here:\n// http://www.html5rocks.com/en/tutorials/canvas/hidpi/\n\nexport const pixelRatio = context => {\n  let devicePixelRatio = window.devicePixelRatio || 1\n  let backingStoreRatio =\n    context.webkitBackingStorePixelRatio ||\n    context.mozBackingStorePixelRatio ||\n    context.msBackingStorePixelRatio ||\n    context.oBackingStorePixelRatio ||\n    context.backingStorePixelRatio ||\n    1\n\n  return devicePixelRatio / backingStoreRatio\n}\n","import React from \"react\";\nimport io from \"socket.io-client\";\nimport \"./pushbutton.css\";\nimport generateGradient from \"./scripts.js\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport Ink from \"../react-ink\"\n\nexport default class PushButton extends React.Component {\n  constructor(props) {\n    console.log(\"prueba\");\n    console.log(props);\n    super(props);\n    this.state = {\n      room: props.room,\n      id: null,\n      bgcolor: generateGradient(),\n      mainGameButton: props.mainGameButton,\n      isConnected: props.isConnected,\n      bigMessage: \"\",\n      userMessage: null\n      // buttonid: props.match.params.id\n    };\n  }\n\n  enterSocketRoom = () => {\n    this.socket.emit(\"room\", this.state.room);\n  }\n\n  componentDidMount() {\n    this.socket = io();\n    this.socket.on(\"connect\", () => {\n      // this.socket.emit(\"room\", this.state.room);\n      this.setState({ id: this.socket.id });\n    });\n\n    this.socket.on(\"feedback\", feedback => {\n      if (feedback === \"failure\") this.onWrong();\n      if (feedback === \"success\") this.onSuccess();\n      if (feedback === \"round\") this.onRound();\n      if (feedback === \"start\") this.newGame();\n      if (feedback === \"memorize\") this.memorize();\n      if (feedback === \"repeat\") this.repeat();\n    });\n\n    this.socket.on(\"player message\", feedback => {\n      if (feedback.type === \"next player\") this.nextPlayer(feedback.content);\n      if (feedback.type === \"player eliminated\") this.playerEliminated(feedback.content);\n      if (feedback.type === \"wins\") this.playerWins(feedback.content);\n    });\n\n    if (this.state.mainGameButton) {\n      this.enterSocketRoom();\n      this.props.startGame();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.isConnected !== prevProps.isConnected){\n      this.setState({isConnected: this.props.isConnected})\n      this.enterSocketRoom()\n    }\n  }  \n\n  nextPlayer = ({player, message}) => {\n    this.setState({userMessage: {player, message}})\n    this.onSuccess()\n    setTimeout(() => {\n      this.setState({userMessage: null})\n    }, 1000)\n  }\n\n  playerEliminated = ({player, message}) => {\n    this.setState({userMessage: {player, message}})\n    this.onFailure()\n    setTimeout(() => {\n      this.setState({userMessage: null})\n    }, 1000)\n  }\n\n  playerWins = ({player, message}) => {\n    this.setState({userMessage: {player, message}})\n    this.onGreen()\n    setTimeout(() => {\n      this.onGreen()\n    }, 800)\n    setTimeout(() => {\n      this.setState({userMessage: null})\n    }, 4000)\n  }\n\n  onWrong = () => {\n    this.setState({ bigMessage: \"FAIL!\" });\n    this.onFailure();\n    setTimeout(() => {\n      this.setState({ bigMessage: \"\"})\n    }, 1000)\n  }\n\n  onRound = () => {\n    this.setState({ bigMessage: \"ROUND COMPLETE\" });\n    this.onGreen();\n    setTimeout(() => {\n      this.setState({ bigMessage: \"\"})\n    }, 1000)\n  }\n\n  memorize = () => {\n    this.setState({ bigMessage: \"MEMORIZE THE CODE\" });\n    this.onSuccess();\n    setTimeout(() => {\n      this.setState({ bigMessage: \"\"})\n    }, 1000)\n  }\n\n  repeat = () => {\n    this.setState({ bigMessage: \"REPEAT THE CODE\" });\n    this.onSuccessFast();\n    setTimeout(() => {\n      this.setState({ bigMessage: \"\"})\n    }, 100)\n  }\n\n\n  newGame = () => {\n    let screenbutton = document.getElementsByClassName(\"screenbutton\")[0];\n    screenbutton.setAttribute(\"style\", \"background-color: #FF5A5A; opacity: 1\");\n    this.setState({ bigMessage: \"READY\" });\n    setTimeout(() => {\n      screenbutton.setAttribute(\n        \"style\",\n        `transition: background-color 1s, opacity 1s; background-color: ${\n          this.state.bgcolor\n        }`\n      );\n      setTimeout(() => {\n        screenbutton.setAttribute(\n          \"style\",\n          \"background-color: #FF5A5A; opacity: 1\"\n        );\n        this.setState({ bigMessage: \"STEADY\" });\n        setTimeout(() => {\n          screenbutton.setAttribute(\n            \"style\",\n            `transition: background-color 1s, opacity 1s; background-color: ${\n              this.state.bgcolor\n            }`\n          );\n          setTimeout(() => {\n            screenbutton.setAttribute(\n              \"style\",\n              \"background-color: #8ADF7C; opacity: 1\"\n            );\n            this.setState({ bigMessage: \"GO!\" });\n            setTimeout(() => {\n              screenbutton.setAttribute(\n                \"style\",\n                `transition: background-color 1s, opacity 1s; background-color: ${\n                  this.state.bgcolor\n                }`\n              );\n              this.setState({ bigMessage: \"\" });\n            }, 900);\n          }, 400);\n        }, 900);\n      }, 400);\n    }, 900);\n  };\n\n  submitTap = () => {\n    // this.socket.emit('sequence', {id: this.state.id, timestamp:Date.now()})\n    this.socket.emit(\"sequence\", this.state.id);\n  };\n\n  onFailure = () => {\n    let screenbutton = document.getElementsByClassName(\"screenbutton\")[0];\n    screenbutton.setAttribute(\"style\", \"background-color: red; opacity: 1\");\n    setTimeout(() => {\n      screenbutton.setAttribute(\n        \"style\",\n        `transition: background-color 2s, opacity 2s; background-color: ${\n          this.state.bgcolor\n        }`\n      );\n    }, 1000);\n  };\n\n  onSuccess = () => {\n    let screenbutton = document.getElementsByClassName(\"screenbutton\")[0];\n    screenbutton.setAttribute(\n      \"style\",\n      `opacity: 1;  background-color: ${this.state.bgcolor}`\n    );\n    setTimeout(() => {\n      screenbutton.setAttribute(\n        \"style\",\n        `transition: opacity 1s; background-color: ${this.state.bgcolor}`\n      );\n    }, 300);\n  };\n\n  onSuccessFast = () => {\n    let screenbutton = document.getElementsByClassName(\"screenbutton\")[0];\n    screenbutton.setAttribute(\n      \"style\",\n      `opacity: 1;  background-color: ${this.state.bgcolor}`\n    );\n    setTimeout(() => {\n      screenbutton.setAttribute(\n        \"style\",\n        `transition: opacity 0.5s; background-color: ${this.state.bgcolor}`\n      );\n    }, 300);\n  };\n\n  onGreen = () => {\n    let screenbutton = document.getElementsByClassName(\"screenbutton\")[0];\n    screenbutton.setAttribute(\"style\", \"background-color: #8ADF7C; opacity: 1\");\n    setTimeout(() => {\n      screenbutton.setAttribute(\n        \"style\",\n        `transition: background-color 2s, opacity 2s; background-color: ${\n          this.state.bgcolor\n        }`\n      );\n    }, 1000);\n  };\n\n  render() {\n    return (\n      <div\n        className=\"screenbutton\"\n        style={{ backgroundColor: this.state.bgcolor }}\n        onClick={this.submitTap}\n      >\n      <Ink />\n        <TransitionGroup className=\"pushbutton-messages\">\n          {this.state.bigMessage && (\n            <CSSTransition\n              timeout={{ enter: 100, exit: 1000 }}\n              classNames=\"fademessage\"\n              key=\"bigbig\"\n            >\n              <div className=\"big-message\">{this.state.bigMessage}</div>\n            </CSSTransition>\n          )}\n          {this.state.userMessage && (\n            <CSSTransition\n              timeout={{ enter: 100, exit: 1000 }}\n              classNames=\"fademessage\"\n              key=\"usermessage\"\n            >\n              <div className=\"user-message-box\">\n                <div className=\"user-message-player\">{this.state.userMessage.player}</div>\n                <div className=\"user-message-text\">{this.state.userMessage.message}</div>\n              </div>\n            </CSSTransition>\n          )}\n        </TransitionGroup>\n      </div>\n    );\n  }\n}\n","// auth/auth-service.js\nimport axios from 'axios';\n\nclass GameService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/game`,\n      withCredentials: true\n    });\n  }\n\n  newGame = (name, creator) => {\n    return this.service.post('/newGame', {name, creator})\n    .then(response => response.data)\n  }\n\n  // login = (username, password) => {\n  //   return this.service.post('/login', {username, password})\n  //   .then(response => response.data)\n  // }\n\n  // loggedin = () => {\n  //   return this.service.get('/currentUser',)\n  //   .then(response => response.data)\n  // }\n\n  // logout = () => {\n  //   return this.service.get('/logout',)\n  //   .then(response => response.data)\n  // }\n}\n\nexport default GameService;","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport PushButton from '../pushbutton/PushButton';\nimport GameService from './GameService';\nimport io from 'socket.io-client';\nimport dotenv from 'dotenv';\n\nclass Game extends Component {\n  constructor(props){\n    super(props);\n    this.service = new GameService();\n    this.state = {\n      room: props.match.params.room,\n      game: null,\n      buttons: null,\n      sequence: [],\n      roundSequence: [],\n      round: 0,\n      message: \"push first button of the sequence to start\"\n    }\n  }\n\n  newGame = (name) => {\n    let creator = \"5bbe158395b68f1bcbe52963\"\n    \n    this.service.newGame(name, creator)\n      .then(game => {\n        \n        this.setState({game: game.name})\n      })\n      .catch(error => console.log(error))\n  }\n\n  requestButtons = () => {\n    this.socket.emit('get buttons');\n  }\n\n  componentDidMount(){\n    this.socket = io('localhost:3010');\n\n    this.socket.on('connect', () => {\n      this.socket.emit('room', this.state.room);\n    });\n\n    this.socket.on('get buttons', (buttons) => {\n      this.setState({buttons});\n    });\n\n    this.socket.on('sequence', (id) => {\n      this.play(id)\n    });\n\n    // this.requestButtons()\n  }\n\n  play = (id) => {\n    let {roundSequence, sequence, round }= this.state;\n\n    if (roundSequence.length === sequence.length){\n      round++;\n      sequence.push(id);\n      this.socket.emit('feedback', {id, feedback: \"round\"});\n      this.setState({sequence, roundSequence: [], round, message: \"new round\"})\n    } else {\n      roundSequence.push(id);\n      if (!this.checkSequence(roundSequence, sequence)) {\n        this.socket.emit('feedback', {id, feedback: \"failure\"});\n        this.setState({message: \"you lost\", sequence: [], roundSequence: [], round: 0});\n      } else {\n        this.socket.emit('feedback', {id, feedback: \"success\"});\n        (roundSequence.length === sequence.length) ? this.setState({roundSequence, message:\"add button to the sequence\"}) : this.setState({roundSequence, message:\"keep on\"})\n      }\n    }\n  }\n\n  checkSequence = (roundSequence, sequence) => {\n    console.log(\"CHECKING IF THIS\")\n    console.log(sequence[roundSequence.length-1])\n    console.log(\"EQUALS THIS\")\n    console.log(roundSequence[roundSequence.length-1])\n    return sequence[roundSequence.length-1] === roundSequence[roundSequence.length-1] ? true : false;\n  } \n\n  componentDidUpdate = () => {\n    console.log(\"updated\")\n    // console.log(this.state.buttons)\n    // console.log(this.state.sequence)\n    console.log(`Round ${this.state.round}`)\n    console.log(`Round sequence: ${this.state.roundSequence}`)\n    console.log(`Total sequence: ${this.state.sequence}`)\n  }\n\n  render() {\n    return (\n      <div className=\"Game\">\n        <div style={{position: \"fixed\", width: \"100%\"}}>\n          <div>{this.state.round}</div>\n          <div>{this.state.message}</div>\n        </div>\n        <Route exact path=\"/game/:room\" component={PushButton}/>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React, { Component } from \"react\";\n\nclass NewGameForm extends Component {\n  constructor(){\n    super();\n    this.state = {\n      name: \"\"\n    }\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const name = this.state.name;\n    console.log(name)\n    this.props.createGame(name)\n  }\n\n  handleChange = (event) => {\n    const value = event.target.value;\n    this.setState({ name: value });\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>New game</h3>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <label>Game name:</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={e => this.handleChange(e)}\n            />\n          </fieldset>\n\n          <input type=\"submit\" value=\"Create game\" />\n        </form>\n\n        <h1>{this.state.error ? \"Error\" : \"\"}</h1>\n      </div>\n    );\n  }\n}\n\nexport default NewGameForm;\n","import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport NewGameForm from './NewGameForm'\n\nexport default class Game extends Component {\n  constructor(){\n    super();\n    this.state = {\n      room: null\n    }\n  }\n\n  handleSubmit = name => {\n    this.setState({room: name})\n  }\n\n\n  render(){\n    return (\n      <Route exact path=\"/\" render={() => (\n        this.state.room ? (\n          <Redirect to={`/game/${this.state.room}`}/>\n        ) : (\n          <NewGameForm createGame={name => this.handleSubmit(name)}/>\n        )\n      )}/>\n    )\n  }\n\n}","import React, { Component } from \"react\";\nimport \"./navbar.css\";\nimport logo from \"../svg/TapCodeLogo.svg\";\nimport profile from \"../svg/NavProfile.svg\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Navbar extends Component {\n  render() {\n    return (\n      <nav className=\"tap-navbar\">\n        <Link to=\"/room\">\n          <div className=\"tap-navbrand\">\n            <img src={logo} alt=\"TapCode Home\" />\n          </div>\n        </Link>\n        <Link to=\"/\">\n          <div className=\"tap-navbrand\">\n            <img src={profile} alt=\"Access profile settings\" />\n          </div>\n        </Link>\n      </nav>\n    );\n  }\n}\n","function preventDefault(e) {\n  e = e || window.event;\n  if (e.preventDefault)\n      e.preventDefault();\n  e.returnValue = false;  \n}\n\n\nconst disableScroll = () => {\n  if (window.addEventListener) // older FF\n      window.addEventListener('DOMMouseScroll', preventDefault, false);\n  window.onwheel = preventDefault; // modern standard\n  window.onmousewheel = document.onmousewheel = preventDefault; // older browsers, IE\n  window.ontouchmove  = preventDefault; // mobile\n}\n\nexport default disableScroll;","import React, { Component } from \"react\";\nimport Ink from \"../react-ink\";\nimport \"./button.css\";\n\nexport class OutlineButton extends Component {\n  \n  render() {\n    let message = this.props.message\n    let isDisabled = this.props.isDisabled\n    let style = {}\n    if (isDisabled){\n      style = {opacity: 0.3}\n    }\n\n    return (\n      <div className=\"on-footer\">\n        <div className=\"bottom-message\">{message}</div>\n        <button className=\"outline-button\" onClick={e => this.props.onClick()} disabled={isDisabled} style={style}>\n          <Ink style={{color: \"white\"}}/>\n          {this.props.text}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport class FilledButton extends Component {\n  \n  render() {\n    let isDisabled = this.props.isDisabled\n    let color = {color: this.props.color}\n    let opacity = {}\n    if (isDisabled){\n      opacity = {opacity: 0.3}\n    }\n    let style = {...opacity,...color}\n\n\n    return (\n      <div className=\"on-footer\">\n        <button className=\"outline-button filled\" onClick={e => this.props.onClick()} disabled={isDisabled} style={style}>\n          <Ink style={{color: \"white\"}}/>\n          {this.props.text}\n        </button>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport \"../steps/steps.css\";\nimport { OutlineButton } from \"../Button/Button\";\nimport PushButton from \"./PushButton\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport \"../main/main.css\";\nimport disableScroll from \"../../disablescroll\";\n\nexport default class PushButtonLoader extends Component {\n  constructor() {\n    super();\n    this.state = {\n      connected: false\n    };\n  }\n\n  handleSubmit = () => {\n    this.setState({ connected: true });\n    disableScroll();\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          width: \"100vw\",\n          height: \"100vh\",\n          display: \"flex\",\n          position: \"relative\",\n          zIndex: \"0\"\n        }}\n      >\n        <TransitionGroup className=\"connect-button\">\n          {!this.state.connected && (\n            <CSSTransition\n              timeout={{ enter: 1000, exit: 900 }}\n              classNames=\"example\"\n              key=\"onmarks\"\n            >\n              <main\n                className=\"tap-main-container\"\n                style={{ paddingBottom: \"0\", zIndex: \"2\" }}\n              >\n                <div className=\"tap-hometext\" style={{ marginBottom: \"-30px\" }}>\n                  Connect this device as a button to game room{\" \"}\n                  <span className=\"bold-and-underline\">\n                    {this.props.match.params.room}\n                  </span>\n                  ?\n                </div>\n                <OutlineButton\n                  text=\"Connect\"\n                  isDisabled={false}\n                  onClick={e => this.handleSubmit()}\n                  color={this.props.color}\n                />\n              </main>\n            </CSSTransition>\n          )}\n        </TransitionGroup>\n        <PushButton room={this.props.match.params.room} isConnected={this.state.connected}/>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nconst Navfix = () => {\n  return <div style={{ flex: \"0 0 52px\" }} />;\n};\n\nexport default Navfix;\n","import React, { Component } from \"react\";\nimport \"./steps.css\";\nimport logo from \"../svg/TapCodeLogo.svg\";\nimport {OutlineButton} from '../Button/Button'\n\nexport default class Home extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      message: props.message\n    }\n  }\n  render() {\n    return (\n      <div style={{width: \"100vw\", display: \"flex\", position:\"relative\", zIndex: \"1\"}}>\n        <main className=\"tap-main-container\">\n        \n          <figure>\n              <img src={logo} alt=\"TapCode Logo\" className=\"tap-homelogo one\"/>\n              <img src={logo} alt=\"TapCode Logo\" className=\"tap-homelogo two\"/>\n              <img src={logo} alt=\"TapCode Logo\" className=\"tap-homelogo three\"/>\n              <img src={logo} alt=\"TapCode Logo\" className=\"tap-homelogo four\"/>\n              <img src={logo} alt=\"TapCode Logo\" className=\"tap-homelogo five\"/>\n          </figure>\n\n          <div className=\"tap-hometext small\">\n          Connect your phones,<br/>memorize the code<br/>and don’t break<br/><span className=\"bold-and-underline\">the chain</span>\n          </div>\n\n          <OutlineButton text=\"Play\" onClick={e => this.props.nextPage()} message={this.state.message}/>\n\n        </main>\n      </div>\n    );\n  }\n}\n\n","import React, { Component } from \"react\";\nimport \"./steps.css\";\nimport setRoom from \"../svg/SetRoom.svg\";\nimport {OutlineButton} from '../Button/Button'\n\nexport default class SetRoom extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      message: props.message,\n      isDisabled: true,\n      roomName: \"\"\n    }\n  }\n  \n  componentDidMount(){\n    document.onkeydown = e => {\n      if (e.keyCode === 13){\n        this.handleSubmit()\n      }\n    }\n  }\n\n  handleChange = (value) => {\n    let isDisabled;\n    value === \"\" ? isDisabled = true : isDisabled = false;\n    this.setState({isDisabled, roomName: value})\n  }\n  \n  handleSubmit = () => {\n    let {roomName} = this.state;\n    if (roomName !== \"\") {\n      this.props.getRoom(roomName)\n    }\n  }\n\n  render() {\n    return (\n      <div style={{width: \"100vw\", display: \"flex\", position:\"relative\", zIndex: \"1\"}}>\n        <main className=\"tap-main-container\">\n        \n          <figure>\n              <img src={setRoom} alt=\"Set Room Step\" className=\"tap-homelogo one\"/>\n          </figure>\n\n          <div className=\"tap-hometext\">\n          Add a name to the game room\n          </div>\n\n          <input placeholder=\"YourGameRoom\" className=\"tap-input\" value={this.state.roomName} onChange={e => this.handleChange(e.target.value)}></input>\n\n          <OutlineButton text=\"Next >\" isDisabled={this.state.isDisabled} onClick={e => this.handleSubmit()} message={this.state.message}/>\n\n        </main>\n      </div>\n    );\n  }\n}\n\n","import React, { Component } from \"react\";\nimport \"./steps.css\";\nimport setPlayers from \"../svg/SetPlayers.svg\";\nimport {OutlineButton} from '../Button/Button';\nimport add from '../svg/add.svg';\nimport remove from '../svg/remove.svg';\n\nexport default class SetPlayers extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      message: \"Add at least one player\",\n      isDisabled: true,\n      opacity: \"0.3\", \n      player: \"\",\n      newPlayers: []\n    }\n  }\n\n  handleChange = (value) => {\n    let opacity;\n    // value === \"\" ? isDisabled = true : isDisabled = false;\n    if (value === \"\") {\n      opacity = \"0.3\";\n    }\n    this.setState({player: value, opacity})\n  }\n\n  componentDidMount(){\n    document.onkeydown = e => {\n      if (e.keyCode === 13 && this.state.player !== \"\"){\n        this.addPlayer()\n      }\n    }\n  }\n\n  addPlayer = () => {\n    let {player} = this.state;\n    if (player !== \"\"){\n      let {newPlayers} = this.state\n      newPlayers.push(player);\n      this.setState({newPlayers, player: \"\", isDisabled: false, message: \"\"})\n      console.log(this.state.newPlayers)\n    }\n  }\n  \n  handleSubmit = () => {\n    let {newPlayers} = this.state;\n    if (newPlayers.length > 0) {\n      this.props.getPlayers(newPlayers)\n    }\n  }\n\n  removePlayer = (playerName) => {\n    let {newPlayers, isDisabled, message} = this.state;\n    newPlayers.splice(newPlayers.indexOf(playerName),1);\n    if (newPlayers.length === 0){\n      isDisabled = true;\n      message = \"Add at least one player\"\n    } else {\n      isDisabled = false;\n      message = \"\";\n    }\n    this.setState({newPlayers, isDisabled, message})\n  }\n\n  render() {\n    let players = this.state.newPlayers.map(playerName => {\n      return (\n        <div key={playerName} className=\"new-player-box\">\n          <img src={remove} className=\"tap-bttn-image\" alt=\"remove player button\" onClick={e=> this.removePlayer(playerName)}/>\n          {/* <button className=\"tap-bttn-addplayer\" onClick={e=> this.removePlayer(playerName)}>-</button> */}\n          <div className=\"new-player-name\">{playerName}</div>\n        </div>\n      )\n    })\n\n    return (\n      <div style={{width: \"100vw\", display: \"flex\", position:\"relative\", zIndex: \"1\"}}>\n        <main className=\"tap-main-container\">\n        \n          <figure>\n              <img src={setPlayers} alt=\"Set player Section\" className=\"tap-homelogo one\"/>\n          </figure>\n\n          <div className=\"tap-hometext\">\n            <div className=\"new-players\">\n              {players}\n            </div>\n            <div className=\"add-player\">\n              <input placeholder=\"Add player\" className=\"tap-input-player\" value={this.state.player} onChange={e => this.handleChange(e.target.value)}/>\n              <img src={add} className=\"tap-bttn-image\" alt=\"add player button\" onClick={e=> this.addPlayer()} style={{opacity: this.state.opacity}}/>\n              {/* <button className=\"tap-bttn-addplayer\" onClick={e=> this.addPlayer()}>+</button> */}\n            </div>\n          </div>\n\n          \n\n          <OutlineButton text=\"Next >\" isDisabled={this.state.isDisabled} onClick={e => this.handleSubmit()} message={this.state.message}/>\n\n        </main>\n      </div>\n    );\n  }\n}\n\n\n","import React, { Component } from \"react\";\nimport \"./steps.css\";\nimport setButtons from \"../svg/SetButtons.svg\";\nimport { OutlineButton } from \"../Button/Button\";\n\nexport default class SetButtons extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDisabled: true,\n      roomName: props.roomName\n    };\n  }\n\n  componentDidMount() {\n    document.onkeydown = e => {\n      if (e.keyCode === 13) {\n        this.handleSubmit();\n      }\n    };\n  }\n\n  handleChange = value => {\n    let isDisabled;\n    value === \"\" ? (isDisabled = true) : (isDisabled = false);\n    this.setState({ isDisabled, roomName: value });\n  };\n\n  handleSubmit = () => {\n    this.props.nextPage();\n  };\n\n  render() {\n    let isDisabled = true;\n    let buttonsNumber = this.props.buttonsNumber;\n    let message = this.props.message;\n    if (buttonsNumber > 1) {\n      buttonsNumber = `${buttonsNumber} buttons connected`;\n      isDisabled = false;\n    } else {\n      buttonsNumber = `${buttonsNumber} button connected`;\n      isDisabled = true;\n    }\n\n    return (\n      <div\n        style={{\n          width: \"100vw\",\n          display: \"flex\",\n          position: \"relative\",\n          zIndex: \"1\"\n        }}\n      >\n        <main className=\"tap-main-container\">\n          <figure style={{marginBottom: \"0\"}}>\n            <img\n              src={setButtons}\n              alt=\"Set Buttons Step\"\n              className=\"tap-homelogo one\"\n            />\n          </figure>\n\n          <div className=\"tap-hometext\">\n            Add buttons to the game by accessing the following address in any\n            smartphone\n          </div>\n\n          <div className=\"tap-input roomname\">\n            tapcodeit.herokuapp.com/\n            <br />\n            {this.state.roomName}\n          </div>\n\n          <div className=\"tap-hometext\" style={{ marginTop: \"16px\" }}>\n            Add as many as you want!\n          </div>\n          <div style={{marginTop: \"4px\", marginBottom: \"-30px\"}}>\n            <div className=\"button is-loading superspinner\">Loading</div>\n            <div className=\"bottom-message\" style={{ marginTop: \"0\" }}>\n              {buttonsNumber}\n            </div>\n          </div>\n\n          <OutlineButton\n            text=\"Next >\"\n            isDisabled={isDisabled}\n            onClick={e => this.handleSubmit()}\n            message={message}\n          />\n        </main>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./steps.css\";\nimport { FilledButton } from \"../Button/Button\";\n\nexport default class OnYourMarks extends Component {\n\n  handleSubmit = () => {\n    this.props.startGame();\n  };\n\n  render(){\n    let players = this.props.players.join(\", \").concat(\"...\");\n\n    return (\n      <div\n        style={{\n          width: \"100vw\",\n          display: \"flex\",\n          position: \"relative\",\n          zIndex: \"1\"\n        }}\n      >\n        <main className=\"tap-main-container\" style={{paddingBottom: \"0\"}}>\n\n          <div>\n            <div className=\"tap-players-onmarks\">\n              {players}\n            </div>\n            <div className=\"tap-onyourmarks\">\n              On your marks!\n            </div>\n          </div>\n\n          <FilledButton\n            text=\"Play\"\n            isDisabled={false}\n            onClick={e => this.handleSubmit()}\n            color={this.props.color}\n          />\n        </main>\n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./steps.css\";\nimport { FilledButton } from \"../Button/Button\";\n\nexport default class OnYourMarks extends Component {\n\n  handleSubmit = () => {\n    this.props.startGame();\n  };\n\n  render(){\n    let players = this.props.players.join(\", \").concat(\"...\");\n\n    return (\n      <div\n        style={{\n          width: \"100vw\",\n          display: \"flex\",\n          position: \"relative\",\n          zIndex: \"1\"\n        }}\n      >\n        <main className=\"tap-main-container\" style={{paddingBottom: \"0\"}}>\n\n          <div>\n            <div className=\"tap-players-onmarks\">\n              \n            </div>\n            <div className=\"tap-onyourmarks\">\n              Game over\n            </div>\n          </div>\n\n          <FilledButton\n            text=\"Play again?\"\n            isDisabled={false}\n            onClick={e => this.handleSubmit()}\n            color={this.props.color}\n          />\n        </main>\n      </div>\n    )\n  }\n}\n","// auth/auth-service.js\nimport axios from 'axios';\n\nclass GameService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/game`,\n      withCredentials: true\n    });\n  }\n\n  newGame = (name, creator) => {\n    return this.service.post('/newGame', {name, creator})\n    .then(response => response.data)\n  }\n\n  // login = (username, password) => {\n  //   return this.service.post('/login', {username, password})\n  //   .then(response => response.data)\n  // }\n\n  // loggedin = () => {\n  //   return this.service.get('/currentUser',)\n  //   .then(response => response.data)\n  // }\n\n  // logout = () => {\n  //   return this.service.get('/logout',)\n  //   .then(response => response.data)\n  // }\n}\n\nexport default GameService;","import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport PushButton from \"../pushbutton/PushButton\";\nimport GameService from \"./GameService\";\nimport io from \"socket.io-client\";\nimport \"./game.css\";\nimport disableScroll from \"../../disablescroll\";\nimport { OutlineButton } from \"../Button/Button\";\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.service = new GameService();\n    this.state = {\n      room: props.room,\n      players: props.players,\n      isListening: false,\n      game: null,\n      buttons: null,\n      sequence: [],\n      roundSequence: [],\n      remainingPlayers: props.players,\n      currentPlayer: null,\n      playerIndex: 0,\n      nextPlayer: null,\n      round: 0,\n      message: \"push first button of the sequence to start\",\n      gameEnds: false,\n      gameOn: false\n    };\n  }\n\n  newGame = name => {\n    let creator = \"5bbe158395b68f1bcbe52963\";\n\n    this.service\n      .newGame(name, creator)\n      .then(game => {\n        this.setState({ game: game.name });\n      })\n      .catch(error => console.log(error));\n  };\n\n  requestButtons = () => {\n    this.socket.emit(\"get buttons\");\n  };\n\n  componentDidMount() {\n    this.socket = io();\n\n    this.socket.on(\"connect\", () => {\n      this.socket.emit(\"room\", this.state.room);\n    });\n\n    this.socket.on(\"get buttons\", buttons => {\n      this.setState({ buttons });\n      this.props.getConnectedButtons(buttons.length);\n    });\n\n    this.socket.on(\"get start buttons\", buttons => {\n      buttons.splice(buttons.indexOf(this.socket.id), 1)\n      this.setState({ buttons });\n      this.startGame2();\n    })\n\n    this.socket.on(\"sequence\", id => {\n      if (this.state.isListening) this.play(id);\n    });\n\n    this.socket.on(\"request buttons\", () => {\n      this.requestButtons();\n    });\n\n    this.requestButtons();\n  }\n\n  startGame1 = () => {\n    this.socket.emit(\"get start buttons\");\n    // this.startGame2()\n  }\n\n  startGame2 = () => {\n    this.setState({gameEnds: false, gameOn: true})\n    console.log(\"botones\");\n    console.log(this.state.buttons);\n    disableScroll();\n    setTimeout(()=>{\n      this.socket.emit(\"start game\");\n      // let nextPlayer = this.state.remainingPlayers[this.state.playerIndex]\n      // let round = this.state.round + 1\n      // this.setState({nextPlayer, round})\n      setTimeout(()=> {\n        this.newRound();\n      }, 4500)\n    }, 500)\n  }\n\n  findNextPlayer = () => {\n    let {players, round, playerIndex} = this.state\n    console.log(\"busca el player\")\n    let remainingPlayers = [...this.state.remainingPlayers]\n    let currentPlayer;\n    if (round === 0){\n      console.log(\"empieza de zero con el player\")\n      currentPlayer = players[0]\n      this.setState({currentPlayer, playerIndex: 0})\n    } else {\n      console.log(\"no es ronda 0\")\n      let lastPlayer = players[playerIndex].toString()\n      let nextIndex;\n      if (remainingPlayers.indexOf(lastPlayer) > -1){\n        console.log(remainingPlayers)\n        console.log(remainingPlayers.includes(lastPlayer))\n        console.log(\"el last player no fue eliminado\")\n        nextIndex = remainingPlayers.indexOf(lastPlayer) + 1 ;\n        if (nextIndex === remainingPlayers.length) nextIndex = 0;\n        currentPlayer = remainingPlayers[nextIndex];\n        playerIndex = players.indexOf(currentPlayer);\n        this.setState({currentPlayer, playerIndex})\n      } else {\n        console.log(\"last player SI FUE eliminado\")\n        let found = false\n        while (!found) {\n          if (playerIndex === players.length) {\n            playerIndex = 0;\n          }\n          let thisPlayer = players[playerIndex]\n          console.log(\"en el while\",thisPlayer)\n          if (remainingPlayers.includes(thisPlayer)){\n            currentPlayer = thisPlayer\n            this.setState({currentPlayer, playerIndex})\n            found = true;\n          } else {\n            playerIndex++;\n          }\n        }\n      }\n    }\n  }\n\n  newRound = () => {\n    this.findNextPlayer();\n    console.log(\"NuevaRonda\")\n    let {round, currentPlayer} = this.state;\n    round++;\n    let message = \"You're next\"\n    let content = {player: currentPlayer, message}\n    let sequence = [...this.state.sequence]\n    let buttons = [...this.state.buttons]\n    \n    buttons.splice(buttons.indexOf(this.socket.id), 1)\n    \n    sequence.push(buttons[Math.floor(Math.random()*buttons.length)])\n\n    this.socket.emit(\"player message\", {type: \"next player\", content});\n    this.setState({sequence, round});\n\n    setTimeout(()=> {\n      this.socket.emit(\"feedback\", { feedback: \"memorize\" });\n    }, 2000)\n    setTimeout(()=> {\n      this.playSequence()\n    }, 4000)\n  }\n\n  playSequence = () => {\n    let sequence = [...this.state.sequence]\n    let time = 850 * (sequence.length + 1.5)\n    console.log(\"esta secuencia\")\n    console.log(sequence)\n\n    sequence.forEach((id, index) => {\n      setTimeout(() => {\n        this.socket.emit(\"feedback\", { id, feedback: \"success\" });\n      }, 850 * (index + 1));\n    })\n    setTimeout(()=>{\n      this.setState({isListening: true});\n      this.socket.emit(\"feedback\", {feedback: \"repeat\"})\n    }, time)\n  }\n\n  play = id => {\n    let { roundSequence, sequence} = this.state;\n    // if (roundSequence.length === sequence.length) {\n    //   round++;\n    //   sequence.push(id);\n    //   this.socket.emit(\"feedback\", { id, feedback: \"round\" });\n    //   this.setState({\n    //     sequence,\n    //     roundSequence: [],\n    //     round,\n    //     message: \"new round\"\n    //   });\n    // } \n    // else {\n      roundSequence.push(id);\n      if (!this.checkSequence(roundSequence, sequence)) {\n        \n        this.socket.emit(\"feedback\", { id, feedback: \"failure\" });\n        \n        if (this.state.players.length === 1){\n          setTimeout(()=>{\n            let player = this.state.currentPlayer;\n            let message = \"game over!\";\n            let content = {player, message};\n            this.socket.emit(\"player message\", {type: \"wins\", content});\n            setTimeout(() => {\n              this.setState({gameEnds: true, gameOn: false})\n              this.props.gameOver()\n            }, 6000)\n          },4200)\n        } else {\n          let {currentPlayer} = this.state;\n          let remainingPlayers = [...this.state.remainingPlayers]\n          remainingPlayers.splice(remainingPlayers.indexOf(currentPlayer), 1)\n          let message = \"has been eliminated\";\n          let content = {message, player: currentPlayer}\n  \n          this.setState({remainingPlayers, isListening: false});\n          setTimeout(()=> {\n            this.socket.emit(\"player message\", {type: \"player eliminated\", content});\n          },2100)\n          if (remainingPlayers.length === 1){\n            setTimeout(()=>{\n              let player = remainingPlayers[0];\n              let message = \"wins\";\n              let content = {player, message};\n              this.socket.emit(\"player message\", {type: \"wins\", content});\n              setTimeout(() => {\n                this.setState({gameEnds: true, gameOn: false})\n                this.props.gameOver()\n              }, 6000)\n            },4200)\n          } else {\n            \n            this.setState({roundSequence: []})\n            setTimeout(()=>{\n              this.newRound()\n            },4200)\n          }\n        }\n        \n        \n\n      } else if (roundSequence.length === sequence.length){\n        this.socket.emit(\"feedback\", { feedback: \"round\" });\n        this.setState({roundSequence: [], isListening: false})\n        setTimeout(()=> {\n          this.newRound();\n        }, 3000)\n      } else {\n        this.socket.emit(\"feedback\", { id, feedback: \"success\" });\n      }\n    // }\n  };\n\n  checkSequence = (roundSequence, sequence) => {\n    // console.log(\"CHECKING IF THIS\");\n    // console.log(sequence[roundSequence.length - 1]);\n    // console.log(\"EQUALS THIS\");\n    // console.log(roundSequence[roundSequence.length - 1]);\n    return sequence[roundSequence.length - 1] ===\n      roundSequence[roundSequence.length - 1]\n      ? true\n      : false;\n  };\n\n  componentDidUpdate = () => {\n    // console.log(\"game component updated\");\n    // console.log(this.state.buttons)\n    // console.log(this.state.sequence)\n    // console.log(`Round ${this.state.round}`)\n    // console.log(`Round sequence: ${this.state.roundSequence}`)\n    // console.log(`Total sequence: ${this.state.sequence}`)\n  };\n\n  render() {\n    let displayGame = { display: \"none\" };\n    if (this.props.displayGame) {\n      displayGame = { display: \"flex\" };\n    }\n    let style = { ...displayGame };\n    let mainButton = null;\n    if (this.props.displayGame) {\n      mainButton = <PushButton room={this.state.room} mainGameButton={true} isConnected={true} startGame={e => this.startGame1()}/>\n    }\n\n    return mainButton;\n  }\n}\n\nexport default Game;\n","import React, { Component } from \"react\";\nimport \"./main.css\";\nimport Navfix from \"../navfix/Navfix\";\nimport Home from \"../steps/Home\";\nimport SetRoom from \"../steps/SetRoom\";\nimport SetPlayers from \"../steps/SetPlayers\";\nimport SetButtons from \"../steps/SetButtons\";\nimport OnYourMarks from '../steps/OnYourMarks';\nimport GameOver from '../steps/GameOver';\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport Game from '../game2/Game'\n\nexport default class Main extends Component {\n  constructor() {\n    super();\n    this.state = {\n      backgroundColor: \"#BFACFD\",\n      page: \"Home\",\n      message: \"\",\n      gameRoom: \"\",\n      players: [],\n      game: false,\n      connectedButtons: 0,\n      displayGame: false\n    };\n  }\n  nextPage = () => {\n    if (this.state.page === \"Home\"){\n      this.setState({page: null})\n      setTimeout(()=>{\n        this.setState({page: \"SetRoom\", backgroundColor: \"#CFC18E\"})\n      }, 1020)\n    }\n    if (this.state.page === \"SetRoom\"){\n      this.setState({page: null})\n      setTimeout(()=>{\n        this.setState({page: \"SetPlayers\", backgroundColor: \"#ACBDFD\"})\n      }, 1020)\n    }\n    if (this.state.page === \"SetPlayers\"){\n      this.setState({page: null})\n      setTimeout(()=>{\n        this.setState({page: \"SetButtons\", backgroundColor: \"#8ECF92\"})\n      }, 1020)\n    }\n    if (this.state.page === \"SetButtons\"){\n      this.setState({page: null})\n      setTimeout(()=>{\n        this.setState({page: \"OnYourMarks\", backgroundColor: \"#CF8EA3\"})\n      }, 1020)\n    }\n  }\n\n  getRoom = (roomName) => {\n    this.setState({gameRoom: roomName})\n    this.nextPage();\n  }\n\n  getPlayers = (newPlayers) => {\n    let {players} = this.state;\n    newPlayers.forEach(element => {\n      players.push(element)\n    });\n    this.setState({players, game: true, message: \"Connect more than 1 button\"})\n    this.nextPage();\n  }\n\n  getConnectedButtons = (buttons) => {\n    if (buttons > 1) {\n      this.setState({connectedButtons: buttons, message: \"\"})\n    } else {\n      this.setState({connectedButtons: buttons, message: \"Connect more than 1 button\"})\n    }\n  }\n\n  startGame = () => {\n    this.setState({page: null});\n    setTimeout(()=>{\n      this.setState({displayGame: true, backgroundColor: \"transparent\"})\n    }, 1020)\n  }\n\n  gameOver = () => {\n    this.setState({page: \"GameOver\", displayGame: false, backgroundColor: \"#CF8EA3\"});\n  }\n\n  render() {\n    let thisPage = () => {\n      if (this.state.page === \"Home\") return (\n        <CSSTransition timeout={{enter: 1000, exit: 900}} classNames=\"example\" key=\"home\">\n          <Home nextPage={e => this.nextPage()} message={this.state.message}/>\n        </CSSTransition>\n      )\n      if (this.state.page === \"SetRoom\") return (\n        <CSSTransition timeout={{enter: 1000, exit: 900}} classNames=\"example\" key=\"roomsetup\">\n          <SetRoom getRoom={roomName => this.getRoom(roomName)}/>\n        </CSSTransition>\n      )\n      if (this.state.page === \"SetPlayers\") return (\n        <CSSTransition timeout={{enter: 1000, exit: 900}} classNames=\"example\" key=\"players\">\n          <SetPlayers getPlayers={players => this.getPlayers(players)}/>\n        </CSSTransition>\n      )\n      if (this.state.page === \"SetButtons\") return (\n        <CSSTransition timeout={{enter: 1000, exit: 900}} classNames=\"example\" key=\"buttons\">\n          <SetButtons roomName={this.state.gameRoom} message={this.state.message}buttonsNumber={this.state.connectedButtons} nextPage={e => this.nextPage()}/>\n        </CSSTransition>\n      )\n      if (this.state.page === \"OnYourMarks\") return (\n        <CSSTransition timeout={{enter: 1000, exit: 900}} classNames=\"example\" key=\"onmarks\">\n          <OnYourMarks players={this.state.players} color=\"#CF8EA3\" startGame={e => this.startGame()}/>\n        </CSSTransition>\n      )\n      if (this.state.page === \"GameOver\") return (\n        <CSSTransition timeout={{enter: 1000, exit: 900}} classNames=\"example\" key=\"onmarks\">\n          <GameOver players={this.state.players} color=\"#CF8EA3\" startGame={e => this.startGame()}/>\n        </CSSTransition>\n      )\n    }\n\n    let game = () => {\n      if (this.state.game){\n        return (<Game room={this.state.gameRoom} players={this.state.players} getConnectedButtons={buttons => this.getConnectedButtons(buttons)} displayGame={this.state.displayGame} gameOver={e => this.gameOver()}/>)\n      }\n    }\n\n\n    return (\n      <div className=\"tap-main\" style={{ backgroundColor: this.state.backgroundColor}}>\n        <Navfix />\n        {(!this.state.displayGame) && (\n          <TransitionGroup className=\"home-pages\">\n            {thisPage()}\n          </TransitionGroup>\n        )}\n        {game()}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n// import logo from './logo.svg';\nimport \"./App.css\";\nimport { Switch, Route } from \"react-router-dom\";\n// import {Chat} from './components/chat';\nimport PushButton from \"./components/pushbutton/PushButton\";\nimport Game from \"./components/game/Game\";\nimport NewGame from \"./components/game/NewGame\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport disableScroll from \"./disablescroll\";\nimport PushButtonLoader from \"./components/pushbutton/PushButtonLoader\"\n\nimport Main from \"./components/main/Main\";\n\nclass App extends Component {\n  componentDidMount() {\n    // disableScroll();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" render={()=> <Main />} />\n          <Route exact path=\"/:room\" component={PushButtonLoader} />\n        </Switch>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// {/* <Switch>\n//           <Route exact path='/game/:room' component={Chat}/>\n//           <Route exact path='/:room/:id' component={PushButton}/>\n//         </Switch> */}\n// {/* <Switch>\n//           <Route exact path=\"/\" component={NewGame} />\n//           <Route exact path=\"/game/:room\" component={Game} />\n//           <Route exact path=\"/:room\" component={PushButton} />\n//         </Switch> */}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bulma/css/bulma.css\";\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/NavProfile.a4ca66a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/SetRoom.27202ad6.svg\";","module.exports = __webpack_public_path__ + \"static/media/SetPlayers.81edeb81.svg\";","module.exports = __webpack_public_path__ + \"static/media/add.a703c750.svg\";","module.exports = __webpack_public_path__ + \"static/media/remove.cb5a7c57.svg\";","module.exports = __webpack_public_path__ + \"static/media/SetButtons.ddad1846.svg\";"],"sourceRoot":""}